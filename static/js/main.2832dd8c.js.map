{"version":3,"file":"static/js/main.2832dd8c.js","mappings":"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AAM,0ECZrB,IAAMkvC,EAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GWC,EAA4B,CACvC,EAAG,SACH,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,UC1BA,SAASC,EAAU/0B,GACxB,IAAMv9B,EACiB,kBAAdu9B,EAAyBA,EAAUh+B,WAAW,GAAKg+B,EAE5D,OAAOv9B,GAAQ,IAAMA,GAAQ,EAC/B,CCLO,SAASuyD,EAAch1B,GAC5B,IAAMv9B,EACiB,kBAAdu9B,EAAyBA,EAAUh+B,WAAW,GAAKg+B,EAE5D,OACGv9B,GAAQ,IAAcA,GAAQ,KAC9BA,GAAQ,IAAcA,GAAQ,IAC9BA,GAAQ,IAAcA,GAAQ,EAEnC,CCNO,SAASwyD,EAAiBj1B,GAC/B,OCJK,SAAwBA,GAC7B,IAAMv9B,EACiB,kBAAdu9B,EAAyBA,E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","sources":["../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-gfm-footnote/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../node_modules/remark-gfm/index.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/hastscript/lib/svg.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/vfile-location/lib/index.js","../node_modules/zwitch/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/rehype-raw/index.js","../node_modules/github-slugger/regex.js","../node_modules/github-slugger/index.js","../node_modules/hast-util-has-property/lib/index.js","../node_modules/hast-util-heading-rank/lib/index.js","../node_modules/hast-util-to-string/index.js","../node_modules/rehype-slug/index.js","../node_modules/hast-util-is-element/index.js","../node_modules/rehype-autolink-headings/lib/index.js","../node_modules/rehype-attr/src/utils.ts","../node_modules/rehype-attr/src/index.ts","../node_modules/rehype-ignore/src/index.ts","../node_modules/unist-util-filter/lib/index.js","../../src/generator.js","../../src/all.js","../../src/common.js","../node_modules/direction/index.js","../node_modules/hast-util-select/lib/enter-state.js","../node_modules/hast-util-select/lib/attribute.js","../node_modules/bcp-47-match/index.js","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","../node_modules/hast-util-select/lib/pseudo.js","../node_modules/hast-util-select/lib/test.js","../node_modules/hast-util-select/lib/name.js","../node_modules/hast-util-select/lib/class-name.js","../node_modules/hast-util-select/lib/id.js","../node_modules/hast-util-select/lib/walk.js","../node_modules/hast-util-select/lib/parse.js","../node_modules/hast-util-select/lib/index.js","../node_modules/rehype-rewrite/src/index.ts","../node_modules/@uiw/react-markdown-preview/src/nodes/octiconLink.ts","../node_modules/@uiw/react-markdown-preview/src/plugins/reservedMeta.ts","../node_modules/@uiw/react-markdown-preview/src/index.tsx","../node_modules/@uiw/react-markdown-preview/src/plugins/useCopied.tsx","../node_modules/@uiw/react-markdown-preview/src/nodes/copy.ts","../node_modules/@uiw/react-shields/src/common/Container.tsx","../node_modules/@uiw/react-shields/src/common/Base.tsx","../node_modules/@uiw/react-shields/src/github/Issues.tsx","../node_modules/@uiw/react-shields/src/github/Size.tsx","../node_modules/@uiw/react-shields/src/github/Downloads.tsx","../node_modules/@uiw/react-shields/src/github/Activity.tsx","../node_modules/@uiw/react-shields/src/github/Version.tsx","../node_modules/@uiw/react-shields/src/github/License.tsx","../node_modules/@uiw/react-shields/src/github/Analysis.tsx","../node_modules/@uiw/react-shields/src/github/Social.tsx","../node_modules/@uiw/react-shields/src/github/Github.tsx","../node_modules/@uiw/react-shields/src/github/index.tsx","../node_modules/@uiw/react-shields/src/coverages/Coverages.tsx","../node_modules/@uiw/react-shields/src/coverages/Codacy.tsx","../node_modules/@uiw/react-shields/src/coverages/Coverage.tsx","../node_modules/@uiw/react-shields/src/coverages/index.tsx","../node_modules/@uiw/react-shields/src/npm/Version.tsx","../node_modules/@uiw/react-shields/src/npm/Size.tsx","../node_modules/@uiw/react-shields/src/npm/Npm.tsx","../node_modules/@uiw/react-shields/src/npm/index.tsx","../node_modules/@uiw/github-corners/src/index.ts","logo.svg","../esm/index.js","../README.md","App.tsx","index.tsx","../../src/main.js","../node_modules/@wcj/dark-mode/dist/dark-mode.min.js","../node_modules/boolbase/index.js","../node_modules/css-selector-parser/lib/index.js","../node_modules/css-selector-parser/lib/parser-context.js","../node_modules/css-selector-parser/lib/render.js","../node_modules/css-selector-parser/lib/utils.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/parse-numeric-range/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/style-to-object/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hastscript/lib/core.js","../node_modules/hastscript/lib/html.js","../node_modules/character-entities-legacy/index.js","../node_modules/character-reference-invalid/index.js","../node_modules/is-decimal/index.js","../node_modules/is-hexadecimal/index.js","../node_modules/is-alphanumerical/index.js","../node_modules/is-alphabetical/index.js","../node_modules/parse-entities/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/space-separated-tokens/index.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde.\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                // @ts-expect-error: to do: update `mdast-util-types` to allow explicit `undefined`s.\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n// To do: next major: expose function to make extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions`, to\n * enable GFM task list items syntax.\n *\n * @type {Extension}\n */\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don’t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn’t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes.\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements.\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {Schema} schema\n *   Current schema.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n * @property {boolean} location\n *   Whether location info was found.\n */\n\nimport {h, s} from 'hastscript'\nimport {html, svg, find} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | VFile | null | undefined} [options]\n *   Configuration.\n * @returns {Node}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const options_ = options || {}\n  /** @type {Options} */\n  let settings\n  /** @type {VFile | undefined} */\n  let file\n\n  if (isFile(options_)) {\n    file = options_\n    settings = {}\n  } else {\n    file = options_.file || undefined\n    settings = options_\n  }\n\n  return one(\n    {\n      schema: settings.space === 'svg' ? svg : html,\n      file,\n      verbose: settings.verbose,\n      location: false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Node}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Node} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // @ts-expect-error: always defined as we give valid input.\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      // @ts-expect-error Types are out of date.\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<Content>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<Content>} */\n  const result = []\n\n  while (++index < nodes.length) {\n    // @ts-expect-error Assume no roots in `nodes`.\n    result[index] = one(state, nodes[index])\n  }\n\n  return result\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    /** @type {Root} */\n    // @ts-expect-error Types are wrong.\n    const content = one(state, reference.content)\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Node} to\n *   hast node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Node} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      node.data = {\n        position: {\n          // @ts-expect-error: assume not `undefined`.\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  // @ts-expect-error `undefined` is fine.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n\n/**\n * Check if something is a file.\n *\n * @param {VFile | Options} value\n *   File or options.\n * @returns {value is VFile}\n *   Whether `value` is a file.\n */\nfunction isFile(value) {\n  return 'messages' in value\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n */\n\n/**\n * @typedef Point\n *   unist point, where `line` and `column` can be `undefined`.\n * @property {number | undefined} line\n *   Line.\n * @property {number | undefined} column\n *   Column.\n * @property {number | undefined} [offset]\n *   Offset.\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get a line/column-based `point` from `offset`.\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {Point}\n *   Point, line/column are undefined for invalid or out of bounds input.\n *\n * @callback ToOffset\n *   Get an offset from a line/column-based `point`.\n * @param {Point | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number}\n *   Offset or `-1` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get a line/column-based `point` from `offset`.\n * @property {ToOffset} toOffset\n *   Get an offset from a line/column-based `point`.\n */\n\n/**\n * Index the given document so you can translate between line/column and offset\n * based positional info.\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /** @type {Array<number>} */\n  const indices = []\n  const search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n\n    return -1\n  }\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5Fragment\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['documentType']} P5Doctype\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['parentNode']} P5Parent\n * @typedef {import('parse5').Token.Attribute} P5Attribute\n * @typedef {Exclude<P5Node, P5Document | P5Fragment>} P5Child\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {'html' | 'svg'} Space\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {html, svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst own = {}.hasOwnProperty\n\n/** @type {(from: Node, schema: Schema) => P5Node} */\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to Parse5’s AST.\n *\n * @param {Node} tree\n *   Tree to transform.\n * @param {Options | Space | null | undefined} [options]\n *   Configuration.\n * @returns {P5Node}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const space = options && typeof options === 'object' ? options.space : options\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Document}\n */\nfunction root(node, schema) {\n  /** @type {P5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Fragment}\n */\nfunction fragment(node, schema) {\n  /** @type {P5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n * @returns {P5Doctype}\n */\nfunction doctype(node) {\n  /** @type {P5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    // @ts-expect-error: change to `null` in a major?\n    parentNode: undefined\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n * @returns {P5Text}\n */\nfunction text(node) {\n  /** @type {P5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n * @returns {P5Comment}\n */\nfunction comment(node) {\n  /** @type {P5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Element}\n *   `parse5` node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<P5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  /** @type {P5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: html and svg both have a space.\n    namespaceURI: webNamespaces[currentSchema.space],\n    childNodes: [],\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<string | number> | string | number | boolean | null | undefined} value\n *   hast property value.\n * @returns {P5Attribute | void}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {P5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<Content>} children\n *   List of children.\n * @param {P5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<P5Child>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<P5Child>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {P5Child} */\n      // @ts-expect-error assume no document.\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Node} from\n *   hast node.\n * @param {P5Node} to\n *   `parse5` node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      // @ts-expect-error assume this is set.\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      // @ts-expect-error assume this is set.\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {Omit<import('parse5').Element, 'parentNode'>} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {Omit<import('parse5').Location, 'startOffset' | 'endOffset'> & {startOffset: number|undefined, endOffset: number|undefined}} P5Location\n * @typedef {import('parse5').ParserOptions} P5ParserOptions\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {import('../complex-types').Raw} Raw\n *\n * @typedef {Omit<Comment, 'value'> & {value: {stitch: Node}}} Stitch\n *\n * @typedef Options\n * @property {Array<string>} [passThrough]\n *   List of custom hast node types to pass through (keep) in hast.\n *   If the passed through nodes have children, those children are expected to\n *   be hast and will be handled.\n *\n * @typedef HiddenTokenizer\n * @property {Array<HiddenLocationTracker>} __mixins\n *   Way too simple, but works for us.\n * @property {HiddenPreprocessor} preprocessor\n * @property {(value: string) => void} write\n * @property {() => number} _consume\n * @property {Array<HiddenToken>} tokenQueue\n * @property {string} state\n * @property {string} returnState\n * @property {number} charRefCode\n * @property {Array<number>} tempBuff\n * @property {Function} _flushCodePointsConsumedAsCharacterReference\n * @property {string} lastStartTagName\n * @property {number} consumedAfterSnapshot\n * @property {boolean} active\n * @property {HiddenToken|undefined} currentCharacterToken\n * @property {HiddenToken|undefined} currentToken\n * @property {unknown} currentAttr\n * @property {Function} NAMED_CHARACTER_REFERENCE_STATE\n * @property {Function} NUMERIC_CHARACTER_REFERENCE_END_STATE\n *\n * @typedef {Record<string, unknown> & {location: P5Location}} HiddenToken\n *\n * @typedef HiddenPreprocessor\n * @property {string|undefined} html\n * @property {number} pos\n * @property {number} lastGapPos\n * @property {number} lastCharPos\n * @property {Array<number>} gapStack\n * @property {boolean} skipNextNewLine\n * @property {boolean} lastChunkWritten\n * @property {boolean} endOfChunkHit\n *\n * @typedef HiddenLocationTracker\n * @property {P5Location|undefined} currentAttrLocation\n * @property {P5Location} ctLoc\n * @property {HiddenPosTracker} posTracker\n *\n * @typedef HiddenPosTracker\n * @property {boolean} isEol\n * @property {number} lineStartPos\n * @property {number} droppedBufferSize\n * @property {number} offset\n * @property {number} col\n * @property {number} line\n */\n\n// @ts-expect-error: untyped.\nimport Parser from 'parse5/lib/parser/index.js'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst inTemplateMode = 'IN_TEMPLATE_MODE'\nconst dataState = 'DATA_STATE'\nconst characterToken = 'CHARACTER_TOKEN'\nconst startTagToken = 'START_TAG_TOKEN'\nconst endTagToken = 'END_TAG_TOKEN'\nconst commentToken = 'COMMENT_TOKEN'\nconst doctypeToken = 'DOCTYPE_TOKEN'\n\n/** @type {P5ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Given a hast tree and an optional vfile (for positional info), return a new\n * parsed-again hast tree.\n *\n * @param tree\n *   Original hast tree.\n * @param file\n *   Virtual file for positional info, optional.\n * @param options\n *   Configuration.\n */\nexport const raw =\n  /**\n   * @type {(\n   *   ((tree: Node, file: VFile|undefined, options?: Options) => Node) &\n   *   ((tree: Node, options?: Options) => Node)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {VFile} [file]\n     * @param {Options} [options]\n     */\n    function (tree, file, options) {\n      let index = -1\n      const parser = new Parser(parseOptions)\n      const one = zwitch('type', {\n        handlers: {root, element, text, comment, doctype, raw: handleRaw},\n        // @ts-expect-error: hush.\n        unknown\n      })\n      /** @type {boolean|undefined} */\n      let stitches\n      /** @type {HiddenTokenizer|undefined} */\n      let tokenizer\n      /** @type {HiddenPreprocessor|undefined} */\n      let preprocessor\n      /** @type {HiddenPosTracker|undefined} */\n      let posTracker\n      /** @type {HiddenLocationTracker|undefined} */\n      let locationTracker\n\n      if (isOptions(file)) {\n        options = file\n        file = undefined\n      }\n\n      if (options && options.passThrough) {\n        while (++index < options.passThrough.length) {\n          // @ts-expect-error: hush.\n          one.handlers[options.passThrough[index]] = stitch\n        }\n      }\n\n      const result = fromParse5(\n        documentMode(tree) ? document() : fragment(),\n        file\n      )\n\n      if (stitches) {\n        visit(result, 'comment', (node, index, parent) => {\n          const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n          if (stitch.value.stitch && parent !== null && index !== null) {\n            // @ts-expect-error: assume the stitch is allowed.\n            parent.children[index] = stitch.value.stitch\n            return index\n          }\n        })\n      }\n\n      // Unpack if possible and when not given a `root`.\n      if (\n        tree.type !== 'root' &&\n        result.type === 'root' &&\n        result.children.length === 1\n      ) {\n        return result.children[0]\n      }\n\n      return result\n\n      /**\n       * @returns {P5Fragment}\n       */\n      function fragment() {\n        /** @type {P5Element} */\n        const context = {\n          nodeName: 'template',\n          tagName: 'template',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Element} */\n        const mock = {\n          nodeName: 'documentmock',\n          tagName: 'documentmock',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Fragment} */\n        const doc = {nodeName: '#document-fragment', childNodes: []}\n\n        parser._bootstrap(mock, context)\n        parser._pushTmplInsertionMode(inTemplateMode)\n        parser._initTokenizerForFragmentParsing()\n        parser._insertFakeRootElement()\n        parser._resetInsertionMode()\n        parser._findFormInFragmentContext()\n\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        parser._adoptNodes(mock.childNodes[0], doc)\n\n        return doc\n      }\n\n      /**\n       * @returns {P5Document}\n       */\n      function document() {\n        /** @type {P5Document} */\n        const doc = parser.treeAdapter.createDocument()\n\n        parser._bootstrap(doc, undefined)\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        return doc\n      }\n\n      /**\n       * @param {Array<Content>} nodes\n       * @returns {void}\n       */\n      function all(nodes) {\n        let index = -1\n\n        /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n        if (nodes) {\n          while (++index < nodes.length) {\n            one(nodes[index])\n          }\n        }\n      }\n\n      /**\n       * @param {Root} node\n       * @returns {void}\n       */\n      function root(node) {\n        all(node.children)\n      }\n\n      /**\n       * @param {Element} node\n       * @returns {void}\n       */\n      function element(node) {\n        resetTokenizer()\n        parser._processInputToken(startTag(node))\n\n        all(node.children)\n\n        if (!htmlVoidElements.includes(node.tagName)) {\n          resetTokenizer()\n          parser._processInputToken(endTag(node))\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @returns {void}\n       */\n      function text(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: characterToken,\n          chars: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Doctype} node\n       * @returns {void}\n       */\n      function doctype(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: doctypeToken,\n          name: 'html',\n          forceQuirks: false,\n          publicId: '',\n          systemId: '',\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Comment|Stitch} node\n       * @returns {void}\n       */\n      function comment(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: commentToken,\n          data: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Raw} node\n       * @returns {void}\n       */\n      function handleRaw(node) {\n        const start = pointStart(node)\n        const line = start.line || 1\n        const column = start.column || 1\n        const offset = start.offset || 0\n\n        /* c8 ignore next 4 */\n        if (!preprocessor) throw new Error('Expected `preprocessor`')\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n        if (!locationTracker) throw new Error('Expected `locationTracker`')\n\n        // Reset preprocessor:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/preprocessor.js#L17>.\n        preprocessor.html = undefined\n        preprocessor.pos = -1\n        preprocessor.lastGapPos = -1\n        preprocessor.lastCharPos = -1\n        preprocessor.gapStack = []\n        preprocessor.skipNextNewLine = false\n        preprocessor.lastChunkWritten = false\n        preprocessor.endOfChunkHit = false\n\n        // Reset preprocessor mixin:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/position-tracking/preprocessor-mixin.js>.\n        posTracker.isEol = false\n        posTracker.lineStartPos = -column + 1 // Looks weird, but ensures we get correct positional info.\n        posTracker.droppedBufferSize = offset\n        posTracker.offset = 0\n        posTracker.col = 1\n        posTracker.line = line\n\n        // Reset location tracker:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js>.\n        locationTracker.currentAttrLocation = undefined\n        locationTracker.ctLoc = createParse5Location(node)\n\n        // See the code for `parse` and `parseFragment`:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/parser/index.js#L371>.\n        tokenizer.write(node.value)\n        parser._runParsingLoop(null)\n\n        // Character references hang, so if we ended there, we need to flush\n        // those too.\n        // We reset the preprocessor as if the document ends here.\n        // Then one single call to the relevant state does the trick, parse5\n        // consumes the whole token.\n        if (\n          tokenizer.state === 'NAMED_CHARACTER_REFERENCE_STATE' ||\n          tokenizer.state === 'NUMERIC_CHARACTER_REFERENCE_END_STATE'\n        ) {\n          preprocessor.lastChunkWritten = true\n          tokenizer[tokenizer.state](tokenizer._consume())\n        }\n      }\n\n      /**\n       * @param {Node} node\n       */\n      function stitch(node) {\n        stitches = true\n\n        /** @type {Node} */\n        let clone\n\n        // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n        // passed through node).\n        if ('children' in node) {\n          clone = {\n            ...node,\n            children: raw(\n              {type: 'root', children: node.children},\n              file,\n              options\n              // @ts-expect-error Assume a given parent yields a parent.\n            ).children\n          }\n        } else {\n          clone = {...node}\n        }\n\n        // Hack: `value` is supposed to be a string, but as none of the tools\n        // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n        // through.\n        comment({type: 'comment', value: {stitch: clone}})\n      }\n\n      function resetTokenizer() {\n        /* c8 ignore next 2 */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n\n        // Process final characters if they’re still there after hibernating.\n        // Similar to:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js#L95>.\n        const token = tokenizer.currentCharacterToken\n\n        if (token) {\n          token.location.endLine = posTracker.line\n          token.location.endCol = posTracker.col + 1\n          token.location.endOffset = posTracker.offset + 1\n          parser._processInputToken(token)\n        }\n\n        // Reset tokenizer:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/index.js#L218-L234>.\n        // Especially putting it back in the `data` state is useful: some elements,\n        // like textareas and iframes, change the state.\n        // See GH-7.\n        // But also if broken HTML is in `raw`, and then a correct element is given.\n        // See GH-11.\n        tokenizer.tokenQueue = []\n        tokenizer.state = dataState\n        tokenizer.returnState = ''\n        tokenizer.charRefCode = -1\n        tokenizer.tempBuff = []\n        tokenizer.lastStartTagName = ''\n        tokenizer.consumedAfterSnapshot = -1\n        tokenizer.active = false\n        tokenizer.currentCharacterToken = undefined\n        tokenizer.currentToken = undefined\n        tokenizer.currentAttr = undefined\n      }\n    }\n  )\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction startTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: startTagToken,\n    tagName: node.tagName,\n    selfClosing: false,\n    attrs: attributes(node),\n    location\n  }\n}\n\n/**\n * @param {Element} node\n * @returns {Array<P5Attribute>}\n */\nfunction attributes(node) {\n  return toParse5({\n    tagName: node.tagName,\n    type: 'element',\n    properties: node.properties,\n    children: []\n    // @ts-expect-error Assume element.\n  }).attrs\n}\n\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction endTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: endTagToken,\n    tagName: node.tagName,\n    attrs: [],\n    location\n  }\n}\n\n/**\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot compile `' + node.type + '` node')\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * @param {Node|Stitch} node\n * @returns {P5Location}\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  return {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n}\n\n/**\n * @param {VFile|Options|undefined} value\n * @return {value is Options}\n */\nfunction isOptions(value) {\n  return Boolean(value && !('message' in value && 'messages' in value))\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  🙌\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeRaw(options = {}) {\n  return (tree, file) => {\n    // Assume that when a root was given, it’s also returned.\n    const result = /** @type {Root} */ (raw(tree, file, options))\n    return result\n  }\n}\n","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nexport const regex = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","import { regex } from './regex.js'\n\nconst own = Object.hasOwnProperty\n\n/**\n * Slugger.\n */\nexport default class BananaSlug {\n  /**\n   * Create a new slug class.\n   */\n  constructor () {\n    /** @type {Record<string, number>} */\n    // eslint-disable-next-line no-unused-expressions\n    this.occurrences\n\n    this.reset()\n  }\n\n  /**\n   * Generate a unique slug.\n  *\n  * Tracks previously generated slugs: repeated calls with the same value\n  * will result in different slugs.\n  * Use the `slug` function to get same slugs.\n   *\n   * @param  {string} value\n   *   String of text to slugify\n   * @param  {boolean} [maintainCase=false]\n   *   Keep the current case, otherwise make all lowercase\n   * @return {string}\n   *   A unique slug string\n   */\n  slug (value, maintainCase) {\n    const self = this\n    let result = slug(value, maintainCase === true)\n    const originalSlug = result\n\n    while (own.call(self.occurrences, result)) {\n      self.occurrences[originalSlug]++\n      result = originalSlug + '-' + self.occurrences[originalSlug]\n    }\n\n    self.occurrences[result] = 0\n\n    return result\n  }\n\n  /**\n   * Reset - Forget all previous slugs\n   *\n   * @return void\n   */\n  reset () {\n    this.occurrences = Object.create(null)\n  }\n}\n\n/**\n * Generate a slug.\n *\n * Does not track previously generated slugs: repeated calls with the same value\n * will result in the exact same slug.\n * Use the `GithubSlugger` class to get unique slugs.\n *\n * @param  {string} value\n *   String of text to slugify\n * @param  {boolean} [maintainCase=false]\n *   Keep the current case, otherwise make all lowercase\n * @return {string}\n *   A unique slug string\n */\nexport function slug (value, maintainCase) {\n  if (typeof value !== 'string') return ''\n  if (!maintainCase) value = value.toLowerCase()\n  return value.replace(regex, '').replace(/ /g, '-')\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Check if `node`is an element and has a `field` property.\n *\n * @param {unknown} node\n *   Thing to check (typically `Element`).\n * @param {unknown} field\n *   Field name to check (typically `string`).\n * @returns {boolean}\n *   Whether `node` is an element that has a `field` property.\n */\nexport function hasProperty(node, field) {\n  const value =\n    typeof field === 'string' &&\n    isNode(node) &&\n    node.type === 'element' &&\n    node.properties &&\n    own.call(node.properties, field) &&\n    node.properties[field]\n\n  return value !== null && value !== undefined && value !== false\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n  return Boolean(value && typeof value === 'object' && 'type' in value)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\n// To do next major: return `undefined`.\n/**\n * Get the rank (`1` to `6`) of headings (`h1` to `h6`).\n *\n * @param {Node} node\n *   Node to check.\n * @returns {number | null}\n *   Rank of the heading or `null` if not a heading.\n */\nexport function headingRank(node) {\n  const name =\n    (node && node.type === 'element' && node.tagName.toLowerCase()) || ''\n  const code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */ ? code - 48 /* `0` */ : null\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s.\n */\n\nimport Slugger from 'github-slugger'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\nconst slugs = new Slugger()\n\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}\n */\nexport default function rehypeSlug(options = {}) {\n  const prefix = options.prefix || ''\n\n  return (tree) => {\n    slugs.reset()\n\n    visit(tree, 'element', (node) => {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = prefix + slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n */\n\n/**\n * @typedef {null | undefined | string | TestFunctionAnything | Array<string | TestFunctionAnything>} Test\n *   Check for an arbitrary element, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if an element passes a test, unaware of TypeScript inferral.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element’s parent.\n * @returns {boolean | void}\n *   Whether this element passes the test.\n */\n\n/**\n * @template {Element} T\n *   Element type.\n * @typedef {T['tagName'] | TestFunctionPredicate<T> | Array<T['tagName'] | TestFunctionPredicate<T>>} PredicateTest\n *   Check for an element that can be inferred by TypeScript.\n */\n\n/**\n * Check if an element passes a certain node test.\n *\n * @template {Element} T\n *   Element type.\n * @callback TestFunctionPredicate\n *   Complex test function for an element that can be inferred by TypeScript.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element’s parent.\n * @returns {element is T}\n *   Whether this element passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is an element, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} T\n *   Element type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific element, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is T}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if `node` is an `Element` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific element.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is an element and passes a test.\n */\nexport const isElement =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *  When nullish, checks if `node` is an `Element`.\n *   *  When `string`, works like passing `(element) => element.tagName === test`.\n *   *  When `function` checks if function passed the element is true.\n *   *  When `array`, checks any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName'] | TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<string | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain tag name.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast-util-is-element').Test} Test\n *\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\n *\n * @callback Build\n * @param {Element} node\n * @returns {ElementChild|ElementChild[]}\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior} [behavior='prepend']\n *   How to create links.\n * @property {Behavior} [behaviour]\n *   Please use `behavior` instead\n * @property {Properties} [properties]\n *   Extra properties to set on the link when injecting.\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\n *   `'append'`.\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\n *   hast nodes to insert in the link.\n * @property {ElementChild|ElementChild[]|Build} [group]\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\n *   `'after'`.\n *   There is no default.\n * @property {Test} [test]\n *   Test to define which heading elements are linked.\n *   Any test that can be given to `hast-util-is-element` is supported.\n *   The default (no test) is to link all headings.\n *   Can be used to link only h1-h3, or for example all except h1.\n */\n\nimport extend from 'extend'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {visit, SKIP} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/**\n * Plugin to automatically add links to headings (h1-h6).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeAutolinkHeadings(options = {}) {\n  let props = options.properties\n  const behavior = options.behaviour || options.behavior || 'prepend'\n  const content = options.content || contentDefaults\n  const group = options.group\n  const is = convertElement(options.test)\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  let method\n\n  if (behavior === 'wrap') {\n    method = wrap\n  } else if (behavior === 'before' || behavior === 'after') {\n    method = around\n  } else {\n    if (!props) {\n      props = {ariaHidden: 'true', tabIndex: -1}\n    }\n\n    method = inject\n  }\n\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (\n        headingRank(node) &&\n        hasProperty(node, 'id') &&\n        is(node, index, parent)\n      ) {\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function inject(node) {\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, extend(true, {}, props), toChildren(content, node))\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function around(node, index, parent) {\n    // Uncommon.\n    /* c8 ignore next */\n    if (typeof index !== 'number' || !parent) return\n\n    const link = create(\n      node,\n      extend(true, {}, props),\n      toChildren(content, node)\n    )\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function wrap(node) {\n    node.children = [create(node, extend(true, {}, props), node.children)]\n    return [SKIP]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild[]}\n   */\n  function toChildren(value, node) {\n    const result = toNode(value, node)\n    return Array.isArray(result) ? result : [result]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild|ElementChild[]}\n   */\n  function toNode(value, node) {\n    if (typeof value === 'function') return value(node)\n    return extend(true, Array.isArray(value) ? [] : {}, value)\n  }\n\n  /**\n   * @param {Element} node\n   * @param {Properties} props\n   * @param {ElementChild[]} children\n   * @returns {Element}\n   */\n  function create(node, props, children) {\n    return {\n      type: 'element',\n      tagName: 'a',\n      properties: Object.assign({}, props, {\n        // Fix hast types and make them required.\n        /* c8 ignore next */\n        href: '#' + (node.properties || {}).id\n      }),\n      children\n    }\n  }\n}\n","import { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\nimport { RehypeAttrsOptions } from './';\n\nexport const getURLParameters = (url: string = '') =>\n  ((url.match(/([^?=&]+)(=([^&]*))/g) || []) as string[]).reduce(\n      (a: Record<string, string | number | boolean>, v: string) => (\n        (a[v.slice(0, v.indexOf('=')) as keyof typeof a] = v.slice(v.indexOf('=') + 1)), a\n      ),\n      {}\n    )\n\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\n  let i = index;\n  while (i > -1) {\n    i--;\n    if (!data[i]) return\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\n      return data[i] as unknown as Comment;\n    }\n  }\n  return;\n}\n\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string, codeBlockParames?: boolean): ElementContent | undefined => {\n  let i = index;\n  while (i < data.length) {\n    i++;\n    if (tagName) {\n      const element = data[i] as Literal & Element;\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\n        return element.tagName === tagName ? element : undefined\n      }\n    } else {\n      const element = data[i] as ElementContent & Literal;\n      if (!element || element.type === 'element') return;\n      if (element.type === 'text' && element.value.replace(/(\\n|\\s)/g, '') !== '') return;\n      if (element.type && /^(comment|raw)$/ig.test(element.type)) {\n        if (element.value && !/^rehype:/.test(element.value.replace(/^(\\s+)?<!--(.*?)-->/, '$2') || '')) {\n          return\n        };\n        if (codeBlockParames) {\n          const nextNode = nextChild(data, i, 'pre', codeBlockParames)\n          if (nextNode) return;\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        } else {\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        }\n      }\n    }\n  }\n  return\n}\n\n/**\n * 获取代码注视的位置\n * @param data 数据\n * @param index 当前数据所在的位置\n * @returns 返回 当前参数数据 Object，`{}`\n */\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\n  const param = getURLParameters(value.replace(/^<!--(.*?)-->/, '$1').replace(/^rehype:/, ''));\n  Object.keys(param).forEach((keyName: string) => {\n    if (param[keyName] === 'true') {\n      param[keyName] = true;\n    }\n    if (param[keyName] === 'false') {\n      param[keyName] = false;\n    }\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\n      param[keyName] = +param[keyName];\n    }\n  })\n  return param;\n}\n\nexport type DataConfig = {\n  'data-config': Properties\n}\n\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\n  if (type === 'string') {\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\n  } else if (type === 'attr') {\n    return { ...defaultAttrs, ...attrs}\n  }\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\n}","import { Plugin } from 'unified';\nimport { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * 👇👇👇👇👇\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   * @default `data`\n   */\n  properties?: 'data' | 'string' | 'attr';\n  /**\n   * Code block passing parameters\n   */\n  codeBlockParames?: boolean;\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options = {}) => {\n  const { properties = 'data', codeBlockParames = true } = options;\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (codeBlockParames && node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index, '', codeBlockParames)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n","import { Plugin } from 'unified';\nimport { Root, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'raw' || item.type === 'comment') {\n            let str =  (item.value || '').trim();\n            str = str.replace(/^<!--(.*?)-->/, '$1')\n            if (str === openDelimiter) {\n                start = true;\n                return false;\n            }\n            if (str === closeDelimiter) {\n                start = false;\n                return false;\n            }\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out.\n */\n\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create a new `tree` of copies of all nodes that pass `test`.\n *\n * The tree is walked in *preorder* (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @param tree\n *   Tree to filter.\n * @param options\n *   Configuration (optional).\n * @param test\n *   `unist-util-is` compatible test.\n * @returns\n *   New filtered tree.\n *\n *   `null` is returned if `tree` itself didn’t pass the test, or is cascaded\n *   away.\n */\nexport const filter =\n  /**\n   * @type {(\n   *  (<Tree extends Node, Check extends Test>(node: Tree, options: Options | null | undefined, test: Check | null | undefined) => import('./complex-types.js').Matches<Tree, Check>) &\n   *  (<Tree extends Node, Check extends Test>(node: Tree, test: Check) => import('./complex-types.js').Matches<Tree, Check>) &\n   *  (<Tree extends Node>(node: Tree, options?: Options | null | undefined) => Tree)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Options | Test | null | undefined} [options]\n     * @param {Test | null | undefined} [test]\n     * @returns {Node | null}\n     */\n    function (tree, options, test) {\n      const is = convert(test || options)\n      /** @type {boolean | null | undefined} */\n      const cascadeRaw =\n        options && typeof options === 'object' && 'cascade' in options\n          ? /** @type {boolean | null | undefined} */ (options.cascade)\n          : undefined\n      const cascade =\n        cascadeRaw === undefined || cascadeRaw === null ? true : cascadeRaw\n\n      return preorder(tree)\n\n      /**\n       * @param {Node} node\n       *   Current node.\n       * @param {number | undefined} [index]\n       *   Index of `node` in `parent`.\n       * @param {Parent | undefined} [parent]\n       *   Parent node.\n       * @returns {Node | null}\n       *   Shallow copy of `node`.\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array<Node>} */\n        const children = []\n\n        if (!is(node, index, parent)) return null\n\n        // @ts-expect-error: Looks like a parent.\n        if (node.children) {\n          let childIndex = -1\n\n          // @ts-expect-error Looks like a parent.\n          while (++childIndex < node.children.length) {\n            // @ts-expect-error Looks like a parent.\n            const result = preorder(node.children[childIndex], childIndex, node)\n\n            if (result) {\n              children.push(result)\n            }\n          }\n\n          // @ts-expect-error Looks like a parent.\n          if (cascade && node.children.length > 0 && children.length === 0)\n            return null\n        }\n\n        // Create a shallow clone, using the new children.\n        /** @type {typeof node} */\n        // @ts-expect-error all the fields will be copied over.\n        const next = {}\n        /** @type {string} */\n        let key\n\n        for (key in node) {\n          if (own.call(node, key)) {\n            // @ts-expect-error: Looks like a record.\n            next[key] = key === 'children' ? children : node[key]\n          }\n        }\n\n        return next\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\n/**\n * @param {Element} node\n * @return {string|null}\n */\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 1 is needed to avoid error with @next/mdx\n            // https://github.com/timlrx/rehype-prism-plus/issues/44\n            start: { line: startLineNum, column: 1 },\n            end: { line: startLineNum, column: 1 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i, column: 1 },\n                end: { line: startLineNum + i, column: 1 },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 1 },\n          end: { line: startLineNum, column: 1 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      let meta = /** @type {string} */ (node?.data?.meta || node?.properties?.metastring || '')\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n      node.properties.className.push('code-highlight')\n      const lang = getLanguage(node)\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          let rootLang\n          if (lang?.includes('diff-')){\n            rootLang=lang.split('-')[1]\n          } else{\n            rootLang=lang\n          }\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), rootLang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + rootLang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        if (\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n        ) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if ((lang === 'diff' || lang?.includes('diff-')) && toString(line).substring(0, 1) === '-') {\n          line.properties.className.push('deleted')\n        } else if ((lang === 'diff' || lang?.includes('diff-')) && toString(line).substring(0, 1) === '+') {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n","import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n","import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n","const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst ltrRange =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\n/* eslint-enable no-misleading-character-class */\n\n/**\n * Detect the direction of text: left-to-right, right-to-left, or neutral\n *\n * @param {string} value\n * @returns {'rtl'|'ltr'|'neutral'}\n */\nexport function direction(value) {\n  const source = String(value || '')\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\n}\n","/**\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').ElementChild} ElementChild\n * @typedef {import('./types.js').Direction} Direction\n * @typedef {import('unist-util-visit/complex-types.js').Visitor<ElementChild>} Visitor\n */\n\nimport {direction} from 'direction'\nimport {toString} from 'hast-util-to-string'\nimport {svg} from 'property-information'\nimport {visit, EXIT, SKIP} from 'unist-util-visit'\n\n/**\n * Enter a node.\n *\n * The caller is responsible for calling the return value `exit`.\n *\n * @param {SelectState} state\n *   Current state.\n *\n *   Will be mutated: `exit` undos the changes.\n * @param {Node} node\n *   Node to enter.\n * @returns {() => void}\n *   Call to exit.\n */\n// eslint-disable-next-line complexity\nexport function enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction | undefined} */\n  let dirInferred\n\n  if (node.type === 'element' && node.properties) {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const dir = dirProperty(node)\n\n    if (lang !== undefined && lang !== null) {\n      state.language = String(lang)\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n      }\n\n      if (node.tagName === 'svg') {\n        state.schema = svg\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (dir === 'rtl') {\n        dirInferred = dir\n      } else if (\n        // Explicit `[dir=ltr]`.\n        dir === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'html') ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'input' && type === 'tel')\n      ) {\n        dirInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (dir === 'auto' || node.tagName === 'bdi') {\n        if (node.tagName === 'textarea') {\n          // Check contents of `<textarea>`.\n          dirInferred = dirBidi(toString(node))\n        } else if (\n          node.tagName === 'input' &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          dirInferred = node.properties.value\n            ? // @ts-expect-error Assume string\n              dirBidi(node.properties.value)\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          visit(node, inferDirectionality)\n        }\n      }\n\n      if (dirInferred) {\n        state.direction = dirInferred\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n    }\n  }\n\n  return reset\n\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      dirInferred = dirBidi(child.value)\n      return dirInferred ? EXIT : undefined\n    }\n\n    if (\n      child !== node &&\n      child.type === 'element' &&\n      (child.tagName === 'bdi' ||\n        child.tagName === 'script' ||\n        child.tagName === 'style' ||\n        child.tagName === 'textare' ||\n        dirProperty(child))\n    ) {\n      return SKIP\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Direction | undefined}\n */\nfunction dirBidi(value) {\n  const result = direction(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementChild} node\n * @returns {Direction | undefined}\n */\nfunction dirProperty(node) {\n  const value =\n    node.type === 'element' &&\n    node.properties &&\n    typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleAttr} RuleAttr\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Schema} Schema\n * @typedef {import('./types.js').Info} Info\n * @typedef {import('./types.js').PropertyValue} PropertyValue\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {zwitch} from 'zwitch'\n\n/** @type {(query: RuleAttr, element: Element, info: Info) => boolean} */\nconst handle = zwitch('operator', {\n  unknown: unknownOperator,\n  // @ts-expect-error: hush.\n  invalid: exists,\n  handlers: {\n    '=': exact,\n    '~=': spaceSeparatedList,\n    '|=': exactOrPrefix,\n    '^=': begins,\n    '$=': ends,\n    '*=': contains\n  }\n})\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @param {Schema} schema\n * @returns {boolean}\n */\nexport function attribute(query, element, schema) {\n  const attrs = query.attrs\n  let index = -1\n\n  while (++index < attrs.length) {\n    if (!handle(attrs[index], element, find(schema, attrs[index].name))) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Check whether an attribute exists.\n *\n * `[attr]`\n *\n * @param {RuleAttr} _\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exists(_, element, info) {\n  return hasProperty(element, info.property)\n}\n\n/**\n * Check whether an attribute has an exact value.\n *\n * `[attr=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exact(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      normalizeValue(element.properties[info.property], info) === query.value\n  )\n}\n\n/**\n * Check whether an attribute, interpreted as a space-separated list, contains\n * a value.\n *\n * `[attr~=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction spaceSeparatedList(query, element, info) {\n  const value = element.properties && element.properties[info.property]\n\n  return (\n    // If this is a space-separated list, and the query is contained in it, return\n    // true.\n    (!info.commaSeparated &&\n      value &&\n      typeof value === 'object' &&\n      query.value &&\n      value.includes(query.value)) ||\n    // For all other values (including comma-separated lists), return whether this\n    // is an exact match.\n    (hasProperty(element, info.property) &&\n      normalizeValue(value, info) === query.value)\n  )\n}\n\n/**\n * Check whether an attribute has a substring as either the exact value or a\n * prefix.\n *\n * `[attr|=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exactOrPrefix(query, element, info) {\n  const value = normalizeValue(\n    element.properties && element.properties[info.property],\n    info\n  )\n\n  return Boolean(\n    hasProperty(element, info.property) &&\n      query.value &&\n      (value === query.value ||\n        (value.slice(0, query.value.length) === query.value &&\n          value.charAt(query.value.length) === '-'))\n  )\n}\n\n/**\n * Check whether an attribute has a substring as its start.\n *\n * `[attr^=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction begins(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        0,\n        query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * Check whether an attribute has a substring as its end.\n *\n * `[attr$=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction ends(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        -query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * Check whether an attribute contains a substring.\n *\n * `[attr*=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction contains(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).includes(\n        query.value\n      )\n  )\n}\n\n// Shouldn’t be called, Parser throws an error instead.\n/**\n * @param {unknown} query\n * @returns {never}\n */\n/* c8 ignore next 4 */\nfunction unknownOperator(query) {\n  // @ts-expect-error: `operator` guaranteed.\n  throw new Error('Unknown operator `' + query.operator + '`')\n}\n\n/**\n * Stringify a hast value back to its HTML form.\n *\n * @param {PropertyValue} value\n * @param {Info} info\n * @returns {string}\n */\nfunction normalizeValue(value, info) {\n  if (typeof value === 'boolean') {\n    return info.attribute\n  }\n\n  if (Array.isArray(value)) {\n    return (info.commaSeparated ? commas : spaces)(value)\n  }\n\n  return String(value)\n}\n","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more info on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n *   BCP-47 tag.\n * @typedef {Array<Tag>} Tags\n *   List of BCP-47 tags.\n * @typedef {string} Range\n *   RFC 4647 range.\n * @typedef {Array<Range>} Ranges\n *   List of RFC 4647 range.\n *\n * @callback Check\n *   An internal check.\n * @param {Tag} tag\n *   BCP-47 tag.\n * @param {Range} range\n *   RFC 4647 range.\n * @returns {boolean}\n *   Whether the range matches the tag.\n *\n * @typedef {FilterOrLookup<true>} Filter\n *   Filter: yields all tags that match a range.\n * @typedef {FilterOrLookup<false>} Lookup\n *   Lookup: yields the best tag that matches a range.\n */\n\n/**\n * @template {boolean} IsFilter\n *   Whether to filter or perform a lookup.\n * @callback FilterOrLookup\n *   A check.\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n *   Result.\n */\n\n/**\n * Factory to perform a filter or a lookup.\n *\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.\n * That way, earlier ranges matching any tag have precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n *   A check.\n * @param {IsFilter} filter\n *   Whether to filter or perform a lookup.\n * @returns {FilterOrLookup<IsFilter>}\n *   Filter or lookup.\n */\nfunction factory(check, filter) {\n  /**\n   * @param {Tag|Tags} tags\n   *   One or more BCP-47 tags.\n   * @param {Range|Ranges|undefined} [ranges='*']\n   *   One or more RFC 4647 ranges.\n   * @returns {IsFilter extends true ? Tags : Tag|undefined}\n   *   Result.\n   */\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tag|undefined}\n *   BCP-47 tag.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n",null,null,null,"/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoSelector} RulePseudoSelector\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').ElementChild} ElementChild\n */\n\nimport {extendedFilter} from 'bcp-47-match'\nimport {parse as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {whitespace} from 'hast-util-whitespace'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\nimport {queryToSelectors, walk} from './walk.js'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\n/** @type {(rule: Rule | RulePseudo, element: Element, index: number | undefined, parent: Parent | undefined, state: SelectState) => boolean} */\nconst handle = zwitch('name', {\n  unknown: unknownPseudo,\n  invalid: invalidPseudo,\n  handlers: {\n    any: matches,\n    'any-link': anyLink,\n    blank,\n    checked,\n    dir,\n    disabled,\n    empty,\n    enabled,\n    'first-child': firstChild,\n    'first-of-type': firstOfType,\n    has,\n    lang,\n    'last-child': lastChild,\n    'last-of-type': lastOfType,\n    matches,\n    not,\n    'nth-child': nthChild,\n    'nth-last-child': nthLastChild,\n    'nth-of-type': nthOfType,\n    'nth-last-of-type': nthLastOfType,\n    'only-child': onlyChild,\n    'only-of-type': onlyOfType,\n    optional,\n    'read-only': readOnly,\n    'read-write': readWrite,\n    required,\n    root,\n    scope\n  }\n})\n\npseudo.needsIndex = [\n  'any',\n  'first-child',\n  'first-of-type',\n  'last-child',\n  'last-of-type',\n  'matches',\n  'not',\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type',\n  'only-child',\n  'only-of-type'\n]\n\n/**\n * Check whether an element matches pseudo selectors.\n *\n * @param {Rule} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function pseudo(query, element, index, parent, state) {\n  const pseudos = query.pseudos\n  let offset = -1\n\n  while (++offset < pseudos.length) {\n    if (!handle(pseudos[offset], element, index, parent, state)) return false\n  }\n\n  return true\n}\n\n/**\n * Check whether an element matches an `:any-link` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction anyLink(_, element) {\n  return (\n    (element.tagName === 'a' ||\n      element.tagName === 'area' ||\n      element.tagName === 'link') &&\n    hasProperty(element, 'href')\n  )\n}\n\n/**\n * Check whether an element matches a `:blank` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\n    )\n  }\n}\n\n/**\n * Check whether an element matches a `:checked` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction checked(_, element) {\n  if (element.tagName === 'input' || element.tagName === 'menuitem') {\n    return Boolean(\n      element.properties &&\n        (element.properties.type === 'checkbox' ||\n          element.properties.type === 'radio') &&\n        hasProperty(element, 'checked')\n    )\n  }\n\n  if (element.tagName === 'option') {\n    return hasProperty(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * Check whether an element matches a `:dir()` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction dir(query, _1, _2, _3, state) {\n  return state.direction === query.value\n}\n\n/**\n * Check whether an element matches a `:disabled` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction disabled(_, element) {\n  return (\n    (element.tagName === 'button' ||\n      element.tagName === 'input' ||\n      element.tagName === 'select' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'optgroup' ||\n      element.tagName === 'option' ||\n      element.tagName === 'menuitem' ||\n      element.tagName === 'fieldset') &&\n    hasProperty(element, 'disabled')\n  )\n}\n\n/**\n * Check whether an element matches an `:empty` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * Check whether an element matches an `:enabled` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * Check whether an element matches a `:first-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * Check whether an element matches a `:first-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction has(query, element, _1, _2, state) {\n  /** @type {SelectState} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // Do walk deep.\n    shallow: false,\n    // One result is enough.\n    one: true,\n    scopeElements: [element],\n    results: [],\n    rootQuery: queryToSelectors(query.value)\n  }\n\n  walk(childState, {type: 'root', children: element.children})\n\n  return childState.results.length > 0\n}\n\n/**\n * Check whether an element matches a `:lang()` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lang(query, _1, _2, _3, state) {\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    // @ts-expect-error never `selectors`.\n    extendedFilter(state.language, commas(query.value)).length > 0\n  )\n}\n\n/**\n * Check whether an element matches a `:last-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * Check whether an element matches a `:last-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * Check whether an element `:matches` further selectors.\n *\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number | undefined} _\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction matches(query, element, _, parent, state) {\n  /** @type {SelectState} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // Do walk deep.\n    shallow: false,\n    // One result is enough.\n    one: true,\n    scopeElements: [element],\n    results: [],\n    rootQuery: queryToSelectors(query.value)\n  }\n\n  walk(childState, element)\n\n  return childState.results[0] === element\n}\n\n/**\n * Check whether an element does `:not` match further selectors.\n *\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction not(query, element, index, parent, state) {\n  return !matches(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches an `:nth-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.elementIndex === 'number' && fn(state.elementIndex)\n}\n\n/**\n * Check whether an element matches an `:nth-last-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      fn(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * Check whether an element matches a `:nth-last-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    fn(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * Check whether an element matches an `:nth-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && fn(state.typeIndex)\n}\n\n/**\n * Check whether an element matches an `:only-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * Check whether an element matches an `:only-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * Check whether an element matches an `:optional` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * Check whether an element matches a `:read-only` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches a `:read-write` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return element.tagName === 'input' || element.tagName === 'textarea'\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * Check whether an element matches a `:required` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction required(_, element) {\n  return (\n    (element.tagName === 'input' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'select') &&\n    hasProperty(element, 'required')\n  )\n}\n\n/**\n * Check whether an element matches a `:root` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction root(_, element, _1, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      (element.tagName === 'html' || element.tagName === 'svg')\n  )\n}\n\n/**\n * Check whether an element matches a `:scope` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction scope(_, element, _1, _2, state) {\n  return state.scopeElements.includes(element)\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  throw new Error('Invalid pseudo-selector')\n}\n\n/**\n * @param {unknown} query\n * @returns {never}\n */\nfunction unknownPseudo(query) {\n  // @ts-expect-error: indexable.\n  if (query.name) {\n    // @ts-expect-error: indexable.\n    throw new Error('Unknown pseudo-selector `' + query.name + '`')\n  }\n\n  throw new Error('Unexpected pseudo-element or empty pseudo-class')\n}\n\n/**\n * Check children.\n *\n * @param {Element} element\n * @param {(child: ElementChild) => boolean} check\n * @returns {boolean}\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n/**\n * @param {SelectState} state\n * @param {RulePseudo} query\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * @param {RulePseudo} query\n * @returns {(value: number) => boolean}\n */\nfunction getCachedNthCheck(query) {\n  /** @type {(value: number) => boolean} */\n  // @ts-expect-error: cache.\n  let fn = query._cachedFn\n\n  if (!fn) {\n    // @ts-expect-error: always string.\n    fn = nthCheck(query.value)\n    // @ts-expect-error: cache.\n    query._cachedFn = fn\n  }\n\n  return fn\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\n\n/**\n * Test a rule.\n *\n * @param {Rule} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, element, index, parent, state) {\n  return Boolean(\n    (!query.tagName || name(query, element)) &&\n      (!query.classNames || className(query, element)) &&\n      (!query.id || id(query, element)) &&\n      (!query.attrs || attribute(query, element, state.schema)) &&\n      (!query.pseudos || pseudo(query, element, index, parent, state))\n  )\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * Check whether an element has a tag name.\n *\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function name(query, element) {\n  return query.tagName === '*' || query.tagName === element.tagName\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * Check whether an element has all class names.\n *\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function className(query, element) {\n  /** @type {readonly string[]} */\n  // @ts-expect-error Assume array.\n  const value = element.properties.className || []\n  let index = -1\n\n  if (query.classNames) {\n    while (++index < query.classNames.length) {\n      if (!value.includes(query.classNames[index])) return false\n    }\n  }\n\n  return true\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * Check whether an element has an ID.\n *\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function id(query, element) {\n  return Boolean(element.properties && element.properties.id === query.id)\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Selectors} Selectors\n *\n * @typedef Nest\n *   Rule sets by nesting.\n * @property {Array<RuleSet> | undefined} descendant\n *   `a b`\n * @property {Array<RuleSet> | undefined} directChild\n *   `a > b`\n * @property {Array<RuleSet> | undefined} adjacentSibling\n *   `a + b`\n * @property {Array<RuleSet> | undefined} generalSibling\n *   `a ~ b`\n *\n * @typedef Counts\n *   Info on elements in a parent.\n * @property {number} count\n *   Number of elements.\n * @property {Map<string, number>} types\n *   Number of elements by tag name.\n */\n\nimport {enterState} from './enter-state.js'\nimport {test} from './test.js'\n\n/** @type {Array<never>} */\nconst empty = []\n\n/**\n * Turn a query into a uniform object.\n *\n * @param {Selectors | RuleSet | null} query\n * @returns {Selectors}\n */\nexport function queryToSelectors(query) {\n  if (query === null) {\n    return {type: 'selectors', selectors: []}\n  }\n\n  if (query.type === 'ruleSet') {\n    return {type: 'selectors', selectors: [query]}\n  }\n\n  return query\n}\n\n/**\n * Walk a tree.\n *\n * @param {SelectState} state\n * @param {Node | undefined} tree\n */\nexport function walk(state, tree) {\n  if (tree) {\n    one(state, [], tree, undefined, undefined)\n  }\n}\n\n/**\n * Check a node.\n *\n * @param {SelectState} state\n * @param {Array<RuleSet>} currentRules\n * @param {Node} node\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @returns {Nest}\n */\nfunction one(state, currentRules, node, index, parent) {\n  /** @type {Nest} */\n  let nestResult = {\n    directChild: undefined,\n    descendant: undefined,\n    adjacentSibling: undefined,\n    generalSibling: undefined\n  }\n  const exit = enterState(state, node)\n\n  if (node.type === 'element') {\n    nestResult = applySelectors(\n      state,\n      // Try the root rules for this element too.\n      combine(currentRules, state.rootQuery.selectors),\n      node,\n      index,\n      parent\n    )\n  }\n\n  // If this is a parent, and we want to delve into them, and we haven’t found\n  // our single result yet.\n  if ('children' in node && !state.shallow && !(state.one && state.found)) {\n    all(state, nestResult, node)\n  }\n\n  exit()\n\n  return nestResult\n}\n\n/**\n * Check a node.\n *\n * @param {SelectState} state\n * @param {Nest} nest\n * @param {Parent} node\n * @returns {void}\n */\nfunction all(state, nest, node) {\n  const fromParent = combine(nest.descendant, nest.directChild)\n  /** @type {Array<RuleSet> | undefined} */\n  let fromSibling\n  let index = -1\n  /**\n   * Total counts.\n   * @type {Counts}\n   */\n  const total = {count: 0, types: new Map()}\n  /**\n   * Counts of previous siblings.\n   * @type {Counts}\n   */\n  const before = {count: 0, types: new Map()}\n\n  while (++index < node.children.length) {\n    count(total, node.children[index])\n  }\n\n  index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name =\n      child.type === 'element' ? child.tagName.toUpperCase() : undefined\n    // Before counting further elements:\n    state.elementIndex = before.count\n    state.typeIndex = name ? before.types.get(name) || 0 : 0\n    // After counting all elements.\n    state.elementCount = total.count\n    state.typeCount = name ? total.types.get(name) : 0\n\n    // Only apply if this is a parent, this should be an element, but we check\n    // for parents so that we delve into custom nodes too.\n    if ('children' in child) {\n      const forSibling = combine(fromParent, fromSibling)\n      const nest = one(state, forSibling, node.children[index], index, node)\n      fromSibling = combine(nest.generalSibling, nest.adjacentSibling)\n    }\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    count(before, node.children[index])\n  }\n}\n\n/**\n * Apply selectors to an element.\n *\n * @param {SelectState} state\n *   Current state.\n * @param {Array<RuleSet>} rules\n *   Rules to apply.\n * @param {Element} node\n *   Element to apply rules to.\n * @param {number | undefined} index\n *   Index of node in parent.\n * @param {Parent | undefined} parent\n *   Parent of node.\n * @returns {Nest}\n *   Further rules.\n */\nfunction applySelectors(state, rules, node, index, parent) {\n  /** @type {Nest} */\n  const nestResult = {\n    directChild: undefined,\n    descendant: undefined,\n    adjacentSibling: undefined,\n    generalSibling: undefined\n  }\n  let selectorIndex = -1\n\n  while (++selectorIndex < rules.length) {\n    const ruleSet = rules[selectorIndex]\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    // When shallow, we don’t allow nested rules.\n    // Idea: we could allow a stack of parents?\n    // Might get quite complex though.\n    if (state.shallow && ruleSet.rule.rule) {\n      throw new Error('Expected selector without nesting')\n    }\n\n    // If this rule matches:\n    if (test(ruleSet.rule, node, index, parent, state)) {\n      const nest = ruleSet.rule.rule\n\n      // Are there more?\n      if (nest) {\n        /** @type {RuleSet} */\n        const rule = {type: 'ruleSet', rule: nest}\n        /** @type {keyof Nest} */\n        const label =\n          nest.nestingOperator === '+'\n            ? 'adjacentSibling'\n            : nest.nestingOperator === '~'\n            ? 'generalSibling'\n            : nest.nestingOperator === '>'\n            ? 'directChild'\n            : 'descendant'\n        add(nestResult, label, rule)\n      } else {\n        // We have a match!\n        state.found = true\n\n        if (!state.results.includes(node)) {\n          state.results.push(node)\n        }\n      }\n    }\n\n    // Descendant.\n    if (ruleSet.rule.nestingOperator === null) {\n      add(nestResult, 'descendant', ruleSet)\n    }\n    // Adjacent.\n    else if (ruleSet.rule.nestingOperator === '~') {\n      add(nestResult, 'generalSibling', ruleSet)\n    }\n    // Drop top-level nesting (`undefined`), direct child (`>`), adjacent sibling (`+`).\n  }\n\n  return nestResult\n}\n\n/**\n * Combine two lists, if needed.\n *\n * This is optimized to create as few lists as possible.\n *\n * @param {Array<RuleSet> | undefined} left\n * @param {Array<RuleSet> | undefined} right\n * @returns {Array<RuleSet>}\n */\nfunction combine(left, right) {\n  return left && right && left.length > 0 && right.length > 0\n    ? [...left, ...right]\n    : left && left.length > 0\n    ? left\n    : right && right.length > 0\n    ? right\n    : empty\n}\n\n/**\n * Add a rule to a nesting map.\n *\n * @param {Nest} nest\n * @param {keyof Nest} field\n * @param {RuleSet} rule\n */\nfunction add(nest, field, rule) {\n  const list = nest[field]\n  if (list) {\n    list.push(rule)\n  } else {\n    nest[field] = [rule]\n  }\n}\n\n/**\n * Count a node.\n *\n * @param {Counts} counts\n *   Counts.\n * @param {Node} node\n *   Node (we’re looking for elements).\n * @returns {void}\n *   Nothing.\n */\nfunction count(counts, node) {\n  if (node.type === 'element') {\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name = node.tagName.toUpperCase()\n    const count = (counts.types.get(name) || 0) + 1\n    counts.count++\n    counts.types.set(name, count)\n  }\n}\n","/**\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n */\n\nimport {CssSelectorParser} from 'css-selector-parser'\n\nconst parser = new CssSelectorParser()\n\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*')\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has')\nparser.registerNestingOperators('>', '+', '~')\n\n/**\n * @param {string} selector\n * @returns {Selectors | RuleSet | null}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  return parser.parse(selector)\n}\n","/**\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Space} Space\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {html, svg} from 'property-information'\nimport {queryToSelectors, walk} from './walk.js'\nimport {parse} from './parse.js'\n\n/**\n * Check that the given `node` matches `selector`.\n *\n * This only checks the element itself, not the surrounding tree.\n * Thus, nesting in selectors is not supported (`p b`, `p > b`), neither are\n * selectors like `:first-child`, etc.\n * This only checks that the given element matches the selector.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Node | null | undefined} [node]\n *   Node that might match `selector`, should be an element.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {boolean}\n *   Whether `node` matches `selector`.\n */\nexport function matches(selector, node, space) {\n  const state = createState(selector, node, space)\n  state.one = true\n  state.shallow = true\n  walk(state, node || undefined)\n  return state.results.length > 0\n}\n\n/**\n * Select the first element that matches `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Node | null | undefined} [tree]\n *   Tree to search.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {Element | null}\n *   First element in `tree` that matches `selector` or `null` if nothing is\n *   found.\n *   This could be `tree` itself.\n */\nexport function select(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  state.one = true\n  walk(state, tree || undefined)\n  // To do in major: return `undefined` instead.\n  return state.results[0] || null\n}\n\n/**\n * Select all elements that match `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Node | null | undefined} [tree]\n *   Tree to search.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {Array<Element>}\n *   Elements in `tree` that match `selector`.\n *   This could include `tree` itself.\n */\nexport function selectAll(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  walk(state, tree || undefined)\n  return state.results\n}\n\n/**\n * @param {string} selector\n *   Tree to search.\n * @param {Node | null | undefined} [tree]\n *   Tree to search.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {SelectState} SelectState\n */\nfunction createState(selector, tree, space) {\n  return {\n    // State of the query.\n    rootQuery: queryToSelectors(parse(selector)),\n    results: [],\n    // @ts-expect-error assume elements.\n    scopeElements: tree ? (tree.type === 'root' ? tree.children : [tree]) : [],\n    one: false,\n    shallow: false,\n    found: false,\n    // State in the tree.\n    schema: space === 'svg' ? svg : html,\n    language: undefined,\n    direction: 'ltr',\n    editableOrEditingHost: false,\n    typeIndex: undefined,\n    elementIndex: undefined,\n    typeCount: undefined,\n    elementCount: undefined\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, Element, ElementContent, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\nimport { Test } from 'unist-util-is';\n\n/** Get the node tree source code string */\nexport const getCodeString = (data: ElementContent[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeString(node.children);\n    }\n  });\n  return code;\n};\n\nexport type RehypeRewriteOptions = {\n  /**\n   * Select an element to be wrapped. Expects a string selector that can be passed to hast-util-select ([supported selectors](https://github.com/syntax-tree/hast-util-select/blob/master/readme.md#support)).\n   * If `selector` is not set then wrap will check for a body all elements.\n   */\n  selector?: string;\n  /** Rewrite Element. */\n  rewrite(node: Root | RootContent, index: number | null, parent: Root | Element | null): void;\n}\n\nconst remarkRewrite: Plugin<[RehypeRewriteOptions?], Root> = (options) => {\n  const { selector, rewrite } = options || {};\n  return (tree) => {\n    if (!rewrite || typeof rewrite !== 'function') return;\n    if (selector && typeof selector === 'string') {\n      const selected = selectAll(selector, tree);\n      if (selected && selected.length > 0) {\n        visit(tree, selected as unknown as Test, (node: Element, index, parent) => {\n          rewrite(node, index, parent);\n        });\n      }\n      return;\n    }\n\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      rewrite(node, index, parent);\n    });\n  }\n}\n\nexport default remarkRewrite;\n","import { Element } from 'hast';\n\nexport const octiconLink: Element = {\n  type: 'element',\n  tagName: 'svg',\n  properties: {\n    className: 'octicon octicon-link',\n    viewBox: '0 0 16 16',\n    version: '1.1',\n    width: '16',\n    height: '16',\n    ariaHidden: 'true',\n  },\n  children: [\n    {\n      type: 'element',\n      tagName: 'path',\n      children: [],\n      properties: {\n        fillRule: 'evenodd',\n        d: 'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z',\n      },\n    },\n  ],\n};\n","import { Plugin } from 'unified';\nimport { Root, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\n\nexport interface ReservedMetaOptions {}\n\nexport const reservedMeta: Plugin<[ReservedMetaOptions?], Root> = (options = {}) => {\n  return (tree) => {\n    visit(tree, (node: Root | RootContent) => {\n      if (node.type === 'element' && node.tagName === 'code' && node.data && node.data.meta) {\n        node.properties = { ...node.properties, 'data-meta': String(node.data.meta) };\n      }\n    });\n  };\n};\n","import React, { useImperativeHandle } from 'react';\nimport ReactMarkdown, { Options } from 'react-markdown';\nimport { Element } from 'hast';\nimport { PluggableList } from 'unified';\nimport gfm from 'remark-gfm';\nimport raw from 'rehype-raw';\nimport slug from 'rehype-slug';\nimport headings from 'rehype-autolink-headings';\nimport rehypeAttrs from 'rehype-attr';\nimport rehypeIgnore from 'rehype-ignore';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeRewrite, { getCodeString, RehypeRewriteOptions } from 'rehype-rewrite';\nimport { octiconLink } from './nodes/octiconLink';\nimport { copyElement } from './nodes/copy';\nimport { useCopied } from './plugins/useCopied';\nimport './styles/markdown.less';\n\nimport { reservedMeta } from './plugins/reservedMeta';\n\nexport interface MarkdownPreviewProps extends Omit<Options, 'children'> {\n  prefixCls?: string;\n  className?: string;\n  source?: string;\n  disableCopy?: boolean;\n  style?: React.CSSProperties;\n  pluginsFilter?: (type: 'rehype' | 'remark', plugin: PluggableList) => PluggableList;\n  wrapperElement?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    'data-color-mode'?: 'light' | 'dark';\n  };\n  /**\n   * Please use wrapperElement, Will be removed in v5 release.\n   * @deprecated\n   */\n  warpperElement?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    'data-color-mode'?: 'light' | 'dark';\n  };\n  onScroll?: (e: React.UIEvent<HTMLDivElement>) => void;\n  onMouseOver?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  rehypeRewrite?: RehypeRewriteOptions['rewrite'];\n}\n\nexport interface MarkdownPreviewRef extends MarkdownPreviewProps {\n  mdp: React.RefObject<HTMLDivElement>;\n}\n\nexport default React.forwardRef<MarkdownPreviewRef, MarkdownPreviewProps>((props, ref) => {\n  const {\n    prefixCls = 'wmde-markdown wmde-markdown-color',\n    className,\n    source,\n    style,\n    disableCopy = false,\n    skipHtml = true,\n    onScroll,\n    onMouseOver,\n    pluginsFilter,\n    rehypeRewrite: rewrite,\n    wrapperElement = {},\n    warpperElement = {},\n    ...other\n  } = props;\n  const mdp = React.useRef<HTMLDivElement>(null);\n  useImperativeHandle(ref, () => ({ ...props, mdp }), [mdp, props]);\n  const cls = `${prefixCls || ''} ${className || ''}`;\n  useCopied(mdp);\n\n  const rehypeRewriteHandle: RehypeRewriteOptions['rewrite'] = (node, index, parent) => {\n    if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n      const child = node.children && (node.children[0] as Element);\n      if (child && child.properties && child.properties.ariaHidden === 'true') {\n        child.properties = { class: 'anchor', ...child.properties };\n        child.children = [octiconLink];\n      }\n    }\n    if (node.type === 'element' && node.tagName === 'pre' && !disableCopy) {\n      const code = getCodeString(node.children);\n      node.children.push(copyElement(code));\n    }\n    rewrite && rewrite(node, index, parent);\n  };\n\n  const rehypePlugins: PluggableList = [\n    reservedMeta,\n    [rehypePrism, { ignoreMissing: true }],\n    slug,\n    headings,\n    rehypeIgnore,\n    [rehypeRewrite, { rewrite: rehypeRewriteHandle }],\n    [rehypeAttrs, { properties: 'attr' }],\n    ...(other.rehypePlugins || []),\n  ];\n  const customProps: MarkdownPreviewProps = {\n    allowElement: (element, index, parent) => {\n      if (other.allowElement) {\n        return other.allowElement(element, index, parent);\n      }\n      return /^[A-Za-z0-9]+$/.test(element.tagName);\n    },\n  };\n  if (skipHtml) {\n    rehypePlugins.push(raw);\n  }\n  const remarkPlugins = [...(other.remarkPlugins || []), gfm];\n  const wrapperProps = { ...warpperElement, ...wrapperElement };\n  return (\n    <div ref={mdp} onScroll={onScroll} onMouseOver={onMouseOver} {...wrapperProps} className={cls} style={style}>\n      <ReactMarkdown\n        {...customProps}\n        {...other}\n        skipHtml={skipHtml}\n        rehypePlugins={pluginsFilter ? pluginsFilter('rehype', rehypePlugins) : rehypePlugins}\n        remarkPlugins={pluginsFilter ? pluginsFilter('remark', remarkPlugins) : remarkPlugins}\n        children={source || ''}\n      />\n    </div>\n  );\n});\n","import copyTextToClipboard from '@uiw/copy-to-clipboard';\nimport { useCallback, useEffect } from 'react';\n\nexport function useCopied(container: React.RefObject<HTMLDivElement>) {\n  const handle = useCallback((event: Event) => {\n    const target = (event.currentTarget || event.target) as HTMLDivElement;\n    target.classList.add('active');\n    copyTextToClipboard(target.dataset.code as string, function () {\n      setTimeout(() => {\n        target.classList.remove('active');\n      }, 2000);\n    });\n  }, []);\n  useEffect(() => {\n    const btns = container.current?.querySelectorAll('pre code + div.copied');\n    btns && Array.from(btns).forEach((elm) => elm.addEventListener('click', handle, false));\n    return () => {\n      btns && Array.from(btns).forEach((elm) => elm.removeEventListener('click', handle, false));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [container]);\n}\n","import { Element } from 'hast';\n\nexport function copyElement(str: string = ''): Element {\n  return {\n    type: 'element',\n    tagName: 'div',\n    properties: {\n      class: 'copied',\n      'data-code': str,\n    },\n    children: [\n      {\n        type: 'element',\n        tagName: 'svg',\n        properties: {\n          className: 'octicon-copy',\n          ariaHidden: 'true',\n          viewBox: '0 0 16 16',\n          fill: 'currentColor',\n          height: 12,\n          width: 12,\n        },\n        children: [\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z',\n            },\n            children: [],\n          },\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z',\n            },\n            children: [],\n          },\n        ],\n      },\n      {\n        type: 'element',\n        tagName: 'svg',\n        properties: {\n          className: 'octicon-check',\n          ariaHidden: 'true',\n          viewBox: '0 0 16 16',\n          fill: 'currentColor',\n          height: 12,\n          width: 12,\n        },\n        children: [\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z',\n            },\n            children: [],\n          },\n        ],\n      },\n    ],\n  };\n}\n","import React, { Component, ReactElement } from 'react';\nimport { BaseProps } from '../common/Base';\n\nexport interface ContainerProps extends BaseProps {}\n\nexport default class Container extends Component<ContainerProps> {\n  render() {\n    return (\n      <>\n        {React.Children.toArray(this.props.children).map((child: React.ReactNode) => {\n          if (!React.isValidElement(child)) return null;\n          return React.cloneElement(child as ReactElement, { ...this.props, ...(child as React.ReactElement).props });\n        })}\n      </>\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport interface BaseProps {\n  platform?: 'github' | 'coveralls' | 'npm';\n  type?: string;\n  user?: string;\n  repo?: string;\n  base?: string;\n  href?: HTMLAnchorElement['href'];\n  children?: React.ReactNode;\n}\n\nexport interface BaseState extends BaseProps {}\n\nexport default class Base<T> extends Component<BaseProps & T, BaseState & T> {\n  static defaultProps: BaseProps = {\n    platform: 'github',\n    base: 'https://img.shields.io',\n  }\n  constructor(props: BaseProps & T, defaultState: BaseProps & T, forceState?: BaseProps & T) {\n    super(props);\n    this.state = Object.assign({}, { ...defaultState,  ...props }, forceState);\n  }\n  getUrl = () => '';\n  render() {\n    const { href } = this.state;\n    if (href) {\n      return <a href={href}> <img alt=\"\" src={this.getUrl()} /> </a>;\n    }\n    return <img alt=\"\" src={this.getUrl()} />;\n  }\n}","import Base, { BaseProps} from '../common/Base';\n\nexport interface IssueProps extends BaseProps {\n  /**\n   * Github Issue\n   * \n   * `/github/:issueKind/detail/:property/:user/:repo/:number`  \n   * GitHub issue/pull request detail: GitHub issue/pull request detail badge  \n   * \n   * `/github/issues/:user/:repo`  \n   * GitHub issues:  GitHub issues badge \n   * \n   * `/github/issues-raw/:user/:repo`  \n   * GitHub issues:  GitHub issues badge \n   * \n   * `/github/issues/:user/:repo/:label`  \n   * GitHub issues by-label: GitHub issues by-label badge  \n   * \n   * `/github/issues-raw/:user/:repo/:label`  \n   * GitHub issues by-label: GitHub issues by-label badge  \n   * \n   * `/github/issues-closed/:user/:repo`  \n   * GitHub closed issues: GitHub closed issues badge  \n   * \n   * `/github/issues-closed-raw/:user/:repo`  \n   * GitHub closed issues: GitHub closed issues badge  \n   * \n   * `/github/issues-pr/:user/:repo`  \n   * GitHub pull requests: GitHub pull requests badge  \n   * \n   * `/github/issues-pr-raw/:user/:repo`  \n   * GitHub pull requests: GitHub pull requests badge  \n   * \n   * `/github/issues-pr-closed/:user/:repo`  \n   * GitHub closed pull requests:  GitHub closed pull requests badge \n   * \n   * `/github/issues-pr-closed-raw/:user/:repo`  \n   * GitHub closed pull requests:  GitHub closed pull requests badge \n   * \n   * `/github/issues-pr/:user/:repo/:label`  \n   * GitHub pull requests by-label:  GitHub pull requests by-label badge \n   * \n   * `/github/issues-pr-raw/:user/:repo/:label`  \n   * GitHub pull requests by-label:  GitHub pull requests by-label badge \n   * \n   * `/github/labels/:user/:repo/:name`  \n   * GitHub labels:  GitHub labels badge \n   */\n  type?: 'issueKind' | 'issues' | 'issues-raw' | 'issues-closed'\n    | 'issues-closed-raw' | 'issues-pr' | 'issues-pr-raw' \n    | 'issues-pr-closed' | 'issues-pr-closed-raw'\n    | 'languages';\n  /**\n   * /github/:issueKind/detail/:property/:user/:repo/:number\n   */\n  property?: string;\n  /**\n   * /github/:issueKind/detail/:property/:user/:repo/:number\n   */\n  number?: string;\n  label?: string;\n}\n\nexport default class Issue extends Base<IssueProps> {\n  constructor(props: IssueProps) {\n    super(props, { platform: 'github', type: 'issues' });\n  };\n  getUrl = () => {\n    const { type, platform, property, user, repo, label, base } = this.state;\n    if (platform !== 'github') return '';\n    if (type === 'issues' || /^issues-(raw|closed|closed-raw|pr|pr-raw|pr-closed|pr-closed-raw)/.test(type!)) {\n      if(label && (type === 'issues' || /^issues-(raw|pr|pr-raw)/.test(type || ''))) {\n        return [base, platform, type, user, repo, label].join('/');\n      }\n      return [base, platform, type, user, repo].join('/');\n    }\n    if(type === 'issueKind') {\n      return [base, platform, type, 'detail', property, user, repo].join('/');\n    }\n    return '';\n  }\n}","import Base, { BaseProps } from '../common/Base';\n\nexport interface SizeProps extends BaseProps {\n  /**\n   * Github Size\n   * \n   * /github/languages/code-size/:user/:repo  \n   * /github/repo-size/:user/:repo  \n   * /github/size/:user/:repo/:path*  \n   */\n  type?: 'languages' | 'repo-size' | 'size';\n  /**\n   * GitHub file size in bytes\n   * build/phaser-craft.min.js\n   */\n  path?: string;\n}\n\nexport default class Size extends Base<SizeProps> {\n  constructor(props: SizeProps) {\n    super(props, { platform: 'github', type: 'languages' });\n  };\n\n  getUrl = () => {\n    const { type, platform, user, repo, base, path } = this.state;\n    if (platform !== 'github') return '';\n    /**\n     * /github/languages/code-size/:user/:repo\n     */\n    if (type === 'languages') {\n      return [base, platform, type, 'code-size', user, repo].join('/');\n    }\n    /**\n     * /github/repo-size/:user/:repo\n     */\n    if (type === 'repo-size') {\n      return [base, platform, type, user, repo].join('/');\n    }\n    /**\n     * /github/size/:user/:repo/:path*\n     */\n    if (type === 'size' && path) {\n      return [base, platform, type, user, repo, path].join('/');\n    }\n    return '';\n  }\n}","import Base, { BaseProps} from '../common/Base';\n\nexport interface ActivityProps extends BaseProps {\n  /**\n   * Github Downloads\n   * \n   * `/github/downloads/:user/:repo/total`\n   * GitHub All Releases:  GitHub All Releases badge \n   * \n   * `/github/downloads/:user/:repo/:tag/total`\n   * GitHub Releases:  GitHub Releases badge \n   * \n   * `/github/downloads-pre/:user/:repo/:tag/total`\n   * GitHub Pre-Releases:  GitHub Pre-Releases badge \n   * \n   * `/github/downloads/:user/:repo/:tag/total`\n   * GitHub Releases (by Release): GitHub Releases (by Release) badge  \n   * \n   * `/github/downloads/:user/:repo/:tag/:path`\n   * GitHub Releases (by Asset): GitHub Releases (by Asset) badge  \n   * \n   * `/github/downloads-pre/:user/:repo/:tag/:path`\n   * GitHub Pre-Releases (by Asset): GitHub Pre-Releases (by Asset) badge  \n   */\n  type?: 'downloads' | 'downloads-pre';\n  tag?: string;\n  path?: string;\n  total?: boolean;\n}\n\nexport default class Activity extends Base<ActivityProps> {\n  constructor(props: ActivityProps) {\n    super(props, { platform: 'github', type: 'downloads', total: true });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base, tag, path, total } = this.state;\n    if (platform !== 'github' || !/^(downloads|downloads-pre)/.test(type || '')) return '';\n\n    const baseData = [base, platform, type, user, repo];\n\n    if (path && tag) {\n      return [...baseData, tag, path].join('/');\n    }\n    if ((total && tag) || (type === 'downloads-pre' && tag && total)) {\n      return [...baseData, tag, 'total'].join('/');\n    }\n    if (total) {\n      return [...baseData, 'total'].join('/');\n    }\n    return '';\n  }\n}","import Base, { BaseProps} from '../common/Base';\n\nexport interface ActivityProps extends BaseProps {\n  /**\n   * `/github/commit-activity/:interval/:user/:repo`\n   * GitHub commit activity: GitHub commit activity badge  \n   * \n   * `/github/commits-since/:user/:repo/:version/:branch*`\n   * GitHub commits since tagged version:  GitHub commits since tagged version badge \n   * \n   * `/github/commits-since/:user/:repo/:version/:branch*`\n   * GitHub commits since tagged version (branch): GitHub commits since tagged version (branch) badge  \n   * \n   * `/github/commits-since/:user/:repo/:version/:branch*`\n   * GitHub commits since latest release:  GitHub commits since latest release badge \n   * \n   * `/github/commits-since/:user/:repo/:version/:branch*`\n   * GitHub commits since latest release (branch): GitHub commits since latest release (branch) badge  \n   * \n   * `/github/:variant/:user/:repo`\n   * GitHub contributors:  GitHub contributors badge \n   * \n   * `/github/last-commit/:user/:repo`\n   * GitHub last commit: GitHub last commit badge  \n   * \n   * `/github/last-commit/:user/:repo/:branch`\n   * GitHub last commit (branch):  GitHub last commit (branch) badge \n   * \n   * `/github/release-date/:user/:repo`\n   * GitHub Release Date:  GitHub Release Date badge \n   * \n   * `/github/release-date-pre/:user/:repo`\n   * GitHub (Pre-)Release Date:  GitHub (Pre-)Release Date badge \n   */\n  type?: 'commit-activity' | 'commits-since' | 'variant' | 'last-commit' | 'release-date' | 'release-date-pre';\n  variant?: string;\n  interval?: 'y' | 'm' | 'w';\n  version?: 'contributors' | 'contributors-anon';\n  branch?: string;\n}\n\nexport default class Activity extends Base<ActivityProps> {\n  constructor(props: ActivityProps) {\n    super(props, { platform: 'github', type: 'commits-since' });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base, interval, variant, version, branch } = this.state;\n    if (platform !== 'github') return '';\n    if (type === 'commits-since' && version && branch) {\n      return [base, platform, type, user, repo, version, branch].join('/');\n    }\n    if (type === 'commit-activity' && interval) {\n      return [base, platform, type, interval, user, repo].join('/');\n    }\n    if (type === 'variant' && variant) {\n      return [base, platform, type, variant, user, repo].join('/');\n    }\n    if (type === 'last-commit') {\n      return branch ? [base, platform, type, user, repo, branch].join('/') : [base, platform, type, user, repo].join('/');\n    }\n    if (type && /^release-(date|date-pre)/.test(type)) {\n      return [base, platform, type, user, repo].join('/');\n    }\n    return '';\n  }\n}","import Base, { BaseProps } from '../common/Base';\n\nexport interface VersionProps extends BaseProps {\n  /**\n   * Github Version\n   * \n   * `/github/go-mod/go-version/:user/:repo`\n   * GitHub go.mod Go version: GitHub go.mod Go version badge  \n   * \n   * `/github/go-mod/go-version/:user/:repo/:branch`\n   * GitHub go.mod Go version (branch):  GitHub go.mod Go version (branch) badge \n   * \n   * `/github/go-mod/go-version/:user/:repo?filename=src%2Fgo.mod`\n   * GitHub go.mod Go version (subfolder of monorepo): GitHub go.mod Go version (subfolder of monorepo) badge  \n   * \n   * `/github/go-mod/go-version/:user/:repo/:branch?filename=src%2Fgo.mod`\n   * GitHub go.mod Go version (branch & subfolder of monorepo):  GitHub go.mod Go version (branch & subfolder of monorepo) badge \n   * \n   * `/github/manifest-json/v/:user/:repo`\n   * GitHub manifest version:  GitHub manifest version badge \n   * \n   * `/github/manifest-json/v/:user/:repo/:branch`\n   * GitHub manifest version:  GitHub manifest version badge \n   * \n   * `/github/package-json/v/:user/:repo`\n   * GitHub package.json version:  GitHub package.json version badge \n   * \n   * `/github/package-json/v/:user/:repo/:branch`\n   * GitHub package.json version (branch): GitHub package.json version (branch) badge  \n   * \n   * `/github/v/release/:user/:repo`\n   * GitHub release (latest by date):  GitHub release (latest by date) badge \n   * \n   * `/github/v/release/:user/:repo?include_prereleases`\n   * GitHub release (latest by date including pre-releases): GitHub release (latest by date including pre-releases) badge  \n   * \n   * `/github/v/release/:user/:repo?sort=semver`\n   * GitHub release (latest SemVer): GitHub release (latest SemVer) badge  \n   * \n   * `/github/v/release/:user/:repo?include_prereleases&sort=semver`\n   * GitHub release (latest SemVer including pre-releases):  GitHub release (latest SemVer including pre-releases) badge \n   * \n   * `/github/v/tag/:user/:repo`\n   * GitHub tag (latest by date):  GitHub tag (latest by date) badge \n   * \n   * `/github/v/tag/:user/:repo?sort=semver`\n   * GitHub tag (latest SemVer): GitHub tag (latest SemVer) badge  \n   * \n   * `/github/v/tag/:user/:repo?include_prereleases&sort=semver`\n   * GitHub tag (latest SemVer pre-release): GitHub tag (latest SemVer pre-release) badge  \n   */\n  type?: 'version-release' | 'version-tag' | 'package-json' | 'manifest-json' | 'go-mod';\n  branch?: string;\n}\n\nexport default class Version extends Base<VersionProps> {\n  constructor(props: VersionProps) {\n    super(props, { platform: 'github', type: 'version-release' });\n  };\n\n  getUrl = () => {\n    const { type, platform, user, repo, base, branch } = this.state;\n    let typePath = '';\n    switch (type) {\n      case 'version-release': typePath = 'v/release';break;\n      case 'version-tag': typePath = 'v/tag';break;\n      case 'package-json': typePath = 'package-json/v';break;\n      case 'manifest-json': typePath = 'manifest-json/v';break;\n      case 'go-mod': typePath = 'go-mod/go-version';break;\n      default:break;\n    }\n    if (platform !== 'github' || !typePath) return '';\n    const baseData = [base, platform, typePath, user, repo];\n    if (/(go-mod|manifest-json|package-json)/.test(type || '') && branch) {\n      return [...baseData, branch].join('/');\n    }\n    return baseData.join('/');\n  }\n}","import Base, { BaseProps} from '../common/Base';\n\nexport interface LicenseProps extends BaseProps {\n  /**\n   * Github License\n   * \n   * `/github/license/:user/:repo`  \n   * GitHub: GitHub badge  \n   */\n  type?: 'license';\n}\n\nexport default class License extends Base<LicenseProps> {\n  constructor(props: LicenseProps) {\n    super(props, { platform: 'github', type: 'license' });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base } = this.state;\n    if (platform !== 'github') return '';\n    return [base, platform, type, user, repo].join('/');\n  }\n}","import Base, { BaseProps} from '../common/Base';\n\nexport interface AnalysisProps extends BaseProps {\n  /**\n   * Github Analysis\n   * \n   * `/github/languages/count/:user/:repo`  \n   * GitHub language count:  GitHub language count badge \n   * \n   * `/github/search/:user/:repo/:query`  \n   * GitHub search hit counter:  GitHub search hit counter badge \n   * \n   * `/github/languages/top/:user/:repo`  \n   * GitHub top language:  GitHub top language badge \n   */\n  type?: 'languages-count' | 'languages-top' | 'search';\n  query?: string;\n}\n\nexport default class Analysis extends Base<AnalysisProps> {\n  constructor(props: AnalysisProps) {\n    super(props, { platform: 'github', type: 'languages-count' });\n  };\n  getUrl = () => {\n    const {  base, platform, type, user, repo, query } = this.state;\n    let typePath = '';\n    switch (type) {\n      case 'languages-count': typePath = 'languages/count';break;\n      case 'languages-top': typePath = 'languages/top';break;\n      case 'search': typePath = 'search';break;\n      default:break;\n    }\n    if (platform !== 'github' || !typePath) return '';\n    const baseData = [base, platform, typePath, user, repo];\n    if (query) {\n      return [...baseData, query].join('/');\n    }\n    return baseData.join('/');\n  }\n}","import Base, { BaseProps} from '../common/Base';\n\nexport interface SocialProps extends BaseProps {\n  /**\n   * Github License\n   * \n   * `/github/followers/:user?label=Follow`\n   * GitHub followers: GitHub followers badge  \n   * \n   * `/github/forks/:user/:repo?label=Fork`\n   * GitHub forks: GitHub forks badge  \n   * \n   * `/github/stars/:user/:repo?style=social`\n   * GitHub stars: GitHub stars badge  \n   * \n   * `/github/watchers/:user/:repo?label=Watch`\n   * GitHub watchers:  GitHub watchers badge \n   */\n  type?: 'followers' | 'forks' | 'stars' | 'watchers';\n}\n\nexport default class Social extends Base<SocialProps> {\n  constructor(props: SocialProps) {\n    super(props, { platform: 'github', type: 'followers' });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base } = this.state;\n    if (platform !== 'github') return '';\n    if(type === 'followers') return [base, platform, type, user].join('/');\n    return [base, platform, type, user, repo].join('/');\n  }\n}","import Container from '../common/Container';\nimport Issues from './Issues';\nimport Size from './Size';\nimport Downloads from './Downloads';\nimport Activity from './Activity';\nimport Version from './Version';\nimport License from './License';\nimport Analysis from './Analysis';\nimport Social from './Social';\n\nexport default class Github extends Container {\n  static Issues = Issues;\n  static Size = Size;\n  static Activity = Activity;\n  static Downloads = Downloads;\n  static Version = Version;\n  static License = License;\n  static Analysis = Analysis;\n  static Social = Social;\n}","import Github from './Github';\n\nexport default Github;","import Base, { BaseProps} from '../common/Base';\n\nexport interface CoveragesProps extends BaseProps {\n  /**\n   * Code Coverage\n   * \n   * `/coveralls/:vcsType/:user/:repo`\n   * Coveralls github: Coveralls github badge  \n   * \n   * `/coveralls/:vcsType/:user/:repo/:branch`\n   * Coveralls github branch:  Coveralls github branch badge \n   * \n   * `/coveralls/:vcsType/:user/:repo`\n   * Coveralls bitbucket:  Coveralls bitbucket badge \n   * \n   * `/coveralls/:vcsType/:user/:repo/:branch`\n   * Coveralls bitbucket branch: Coveralls bitbucket branch badge  \n   */\n  type?: string;\n  branch?: string;\n}\n\nexport default class Coverages extends Base<CoveragesProps> {\n  constructor(props: CoveragesProps) {\n    super(props, { type: 'github' }, { platform: 'coveralls' });\n  };\n  getUrl = () => {\n    const { type, platform, user, repo, base } = this.state;\n    if (platform !== 'coveralls') return '';\n    return [base, platform, type, user, repo].join('/');\n  }\n}","import Base, { BaseProps} from '../common/Base';\n\nexport interface CodacyProps extends BaseProps {\n  /**\n   * Codacy Coverage\n   * \n   * `/codacy/coverage/:projectId`\n   * Codacy coverage:  Codacy coverage badge \n   * \n   * `/codacy/coverage/:projectId/:branch`\n   * Codacy branch coverage: Codacy branch coverage badge  \n   */\n  projectId?: string;\n  branch?: string;\n}\n\nexport default class Codacy extends Base<CodacyProps> {\n  constructor(props: CodacyProps) {\n    super(props, { }, { platform: 'coveralls' });\n  };\n  getUrl = () => {\n    const { base, platform, projectId, branch } = this.state;\n    if (platform !== 'coveralls') return '';\n    if (branch) return [base, platform, projectId, branch].join('/');\n    return [base, 'codacy/coverage', projectId].join('/');\n  }\n}","import Container from '../common/Container';\nimport Coverages from './Coverages';\nimport Codacy from './Codacy';\n\n\nexport default class Coverage extends Container {\n  static Coverages = Coverages;\n  static Codacy = Codacy;\n}","import Coverage from './Coverage';\n\nexport default Coverage;","import Base, { BaseProps} from '../common/Base';\n\n/**\n * NPM Version\n * \n * `/npm/v/:packageName`  \n * npm:  npm badge \n * \n * `/npm/v/:scope/:packageName`  \n * npm (scoped): npm (scoped) badge  \n * \n * `/npm/v/:packageName/:tag`  \n * npm (tag):  npm (tag) badge \n * \n * `/npm/v/:packageName/:tag?registry_uri=https%3A%2F%2Fregistry.npmjs.com`  \n * npm (custom registry):  npm (custom registry) badge \n * \n * `/npm/v/:scope/:packageName/:tag`  \n * npm (scoped with tag):  npm (scoped with tag) badge \n * \n * `/npm/dependency-version/:packageName/peer/:dependency`\n * npm peer dependency version:  npm peer dependency version badge \n * \n * `/npm/dependency-version/:scope?/:packageName/dev/:dependencyScope?/:dependency`\n * npm peer dependency version (scoped): npm peer dependency version (scoped) badge  \n * \n * `/npm/dependency-version/:packageName/dev/:dependency`\n * npm dev dependency version: npm dev dependency version badge  \n * \n * `/npm/dependency-version/:scope?/:packageName/dev/:dependencyScope?/:dependency`\n * npm dev dependency version (scoped):  npm dev dependency version (scoped) badge \n * \n * `/npm/dependency-version/:packageName/:dependency`\n * npm (prod) dependency version:  npm (prod) dependency version badge \n * \n * `/npm/dependency-version/:scope?/:packageName/:dependencyScope?/:dependency`\n * npm (prod) dependency version (scoped): npm (prod) dependency version (scoped) badge  \n * \n * `/npm/types/:packageName`\n * npm type definitions: npm type definitions badge  \n */\nexport interface VersionProps extends BaseProps {\n  type?: 'version' | 'peer-dependency' | 'dev-dependency';\n  registryUri?: string;\n  packageName?: string;\n  dependency?: string;\n  scope?: string;\n  dependencyScope?: string;\n  version?: string;\n}\n\nexport default class Version extends Base<VersionProps> {\n  constructor(props: VersionProps) {\n    super(props, { type: 'version' }, { platform: 'npm' });\n  };\n  getUrl = () => {\n    const { base, platform, type, scope, packageName, dependency, dependencyScope, version, registryUri  } = this.state;\n    if (platform !== 'npm' || !packageName) return '';\n\n    let url = '';\n    const baseData = [base, platform];\n\n    if (type === 'version' && packageName) {\n      baseData.push('v');\n      if (scope) {\n        baseData.push(scope);\n      }\n      baseData.push(packageName);\n      if (version) {\n        baseData.push(version);\n      }\n      url = baseData.join('/');\n      if (registryUri) {\n        url = `${url}?registry_uri=${registryUri}`;\n      }\n    } else if (type === 'peer-dependency' && packageName && dependency) {\n      baseData.push('dependency-version');\n      if (scope) {\n        baseData.push(scope);\n      }\n      url = [...baseData, packageName, 'peer', dependency].join('/');\n    } else if (type === 'dev-dependency' && packageName && dependency) {\n      baseData.push('dependency-version');\n      if (scope) {\n        baseData.push(scope);\n      }\n      baseData.concat([packageName, 'dev']);\n      if (dependencyScope) {\n        baseData.push(dependencyScope);\n      }\n      baseData.push(dependency);\n      url = baseData.join('/');\n    } else if (packageName && dependency) {\n      baseData.concat([packageName, dependency]);\n      url = baseData.join('/');\n    }\n\n    return url;\n  }\n}","import Base, { BaseProps} from '../common/Base';\n\nexport interface SizeProps extends BaseProps {\n  format?: 'min' | 'minzip';\n  packageName?: string;\n  scope?: string;\n  version?: string;\n}\n\n/**\n * Npm Size\n * \n * `/bundlephobia/:format/:packageName`\n * npm bundle size:  npm bundle size badge \n * \n * `/bundlephobia/:format/:scope/:packageName`\n * npm bundle size (scoped): npm bundle size (scoped) badge  \n * \n * `/bundlephobia/:format/:packageName/:version`\n * npm bundle size (version):  npm bundle size (version) badge \n * \n * `/bundlephobia/:format/:scope/:packageName/:version`\n * npm bundle size (scoped version): npm bundle size (scoped version) badge  \n * \n */\nexport default class Size extends Base<SizeProps> {\n  constructor(props: SizeProps) {\n    super(props, { format: 'min' }, { platform: 'npm' });\n  };\n  getUrl = () => {\n    const { base, platform, format, packageName, scope, version } = this.state;\n    if (platform !== 'npm') return '';\n\n    const baseData = [base, 'bundlephobia'];\n    let url = '';\n\n    if (packageName && format) {\n      url = [...baseData, format, packageName].join('/');\n    }\n    if (packageName && format && scope) {\n      url = [...baseData, format, scope, packageName].join('/');\n    }\n    if (packageName && format && scope && version) {\n      url = [...baseData, format, scope, packageName, version].join('/');\n    }\n    if (packageName && format && version) {\n      url = [...baseData, format, packageName, version].join('/');\n    }\n\n    return url;\n  }\n}","import Container from '../common/Container';\nimport Version from './Version';\nimport Size from './Size';\n\nexport default class Npm extends Container {\n  static Version = Version;\n  static Size = Size;\n}","import Npm from './Npm';\n\nexport default Npm;","// @ts-ignore\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'github-corners': GithubCorners;\n  }\n  namespace JSX {\n    interface IntrinsicElements {\n      'github-corners': Partial<GithubCorners> | {\n        style?: Partial<CSSStyleDeclaration> | React.CSSProperties;\n      };\n    }\n  }\n}\n\nconst GITHUB_CORNERS_TEMPLATE = document.createElement(\"template\");\nGITHUB_CORNERS_TEMPLATE.innerHTML = `\n<style>\n:host a:hover .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n@keyframes octocat-wave {\n  0%, 100% { transform: rotate(0); }\n  20%, 60% { transform: rotate(-25deg); }\n  40%, 80% { transform: rotate(10deg); }\n}\n@media (max-width:500px) {\n  :host a:hover .octo-arm { animation: none; }\n  :host .octo-arm { animation: octocat-wave 560ms ease-in-out; }\n}\n:host svg {\n  z-index: 99;\n  position: fixed;\n  border: 0px;\n  top: 0px;\n}\n</style>\n<svg width=\"54\" height=\"54\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n  <a xlink:href=\"https://github.com/uiwjs/react-github-corners\" target=\"_blank\" rel=\"nofollow sponsored\" style=\"fill: rgb(21, 21, 19); color: rgb(255, 255, 255);\">\n    <g>\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" class=\"octo-arm\" style=\"transform-origin: 130px 106px;\"></path>\n      <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path>\n    </g>\n  </a>\n</svg>\n`;\n\nexport class GithubCorners extends HTMLElement {\n  /** Sets the z-order of a positioned element and its descendants or flex items. */\n  'z-index'?: string;\n  height?: string | number;\n  width?: string | number;\n  href?: string;\n  color?: string;\n  fill?: string;\n  position?: string;\n  target?: string;\n  top?: string;\n  left?: string;\n  right?: string = '0';\n  bottom?: string;\n  transform?: string;\n  private shadow: ShadowRoot\n  static get observedAttributes(): string[] {\n    return ['style', 'z-index', 'target', 'height', 'width', 'href', 'color', 'fill', 'position', 'top', 'left', 'right', 'bottom', 'transform'];\n  }\n  constructor() {\n    super();\n    this.shadow = this.attachShadow({ mode: 'open' });\n    this.shadow.appendChild(this.ownerDocument.importNode(GITHUB_CORNERS_TEMPLATE.content, true));\n    this.update()\n  }\n  private setAttr(name: string, value: string) {\n    const svg = this.shadow.querySelector('svg');\n    if (/(href)/.test(name.toLocaleLowerCase())) {\n      svg.lastElementChild.setAttribute('xlink:href', value);\n    } else if (/(color|fill)/.test(name.toLocaleLowerCase())) {\n      (svg.firstElementChild as HTMLAnchorElement).style[name as any] = value;\n    } else if (/(z-index|position|top|left|right|bottom|transform)/.test(name.toLocaleLowerCase())) {\n      svg.style[name as any] = value;\n    } else {\n      svg.setAttribute(name, value);\n    }\n  }\n  private update() {\n    ;[...this.getAttributeNames(), 'right'].forEach((name) => {\n      const value = this.getAttribute(name) || this[name as keyof GithubCorners] as any || '';\n      this.setAttr(name, value);\n    });\n  }\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (oldValue !== newValue) {\n      this.setAttr(name, newValue);\n    }\n  }\n}\n\ncustomElements.define('github-corners', GithubCorners);","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#61DAFB\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 420.9,\n    cy: 296.5,\n    r: 45.7\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.5 78.1z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.3931a054f5ef8356122965d973d55570.svg\";\nexport { ForwardRef as ReactComponent };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"className\", \"style\", \"keyCode\", \"onMouseDown\", \"onMouseUp\"];\nimport React from 'react';\nimport \"./style/index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar keyCodeData = [{\n  keycode: 27,\n  name: ['esc']\n}, {\n  keycode: 112,\n  name: ['F1']\n}, {\n  keycode: 113,\n  name: ['F2']\n}, {\n  keycode: 114,\n  name: ['F3']\n}, {\n  keycode: 115,\n  name: ['F4']\n}, {\n  keycode: 116,\n  name: ['F5']\n}, {\n  keycode: 117,\n  name: ['F6']\n}, {\n  keycode: 118,\n  name: ['F7']\n}, {\n  keycode: 119,\n  name: ['F8']\n}, {\n  keycode: 120,\n  name: ['F9']\n}, {\n  keycode: 121,\n  name: ['F10']\n}, {\n  keycode: 122,\n  name: ['F11']\n}, {\n  keycode: 123,\n  name: ['F12']\n}, {\n  keycode: -1,\n  name: ['〇']\n}, {\n  keycode: 192,\n  name: ['~', '`']\n}, {\n  keycode: 49,\n  name: ['!', '1']\n}, {\n  keycode: 50,\n  name: ['@', '2']\n}, {\n  keycode: 51,\n  name: ['#', '3']\n}, {\n  keycode: 52,\n  name: ['$', '4']\n}, {\n  keycode: 53,\n  name: ['%', '5']\n}, {\n  keycode: 54,\n  name: ['^', '6']\n}, {\n  keycode: 55,\n  name: ['&', '7']\n}, {\n  keycode: 56,\n  name: ['*', '8']\n}, {\n  keycode: 57,\n  name: ['(', '9']\n}, {\n  keycode: 48,\n  name: [')', '0']\n}, {\n  keycode: 189,\n  name: ['＿', '-']\n}, {\n  keycode: 187,\n  name: ['＋', ': ']\n}, {\n  keycode: 8,\n  name: ['delete']\n}, {\n  keycode: 9,\n  name: ['tab']\n}, {\n  keycode: 81,\n  name: ['Q']\n}, {\n  keycode: 87,\n  name: ['W']\n}, {\n  keycode: 69,\n  name: ['E']\n}, {\n  keycode: 82,\n  name: ['R']\n}, {\n  keycode: 84,\n  name: ['T']\n}, {\n  keycode: 89,\n  name: ['Y']\n}, {\n  keycode: 85,\n  name: ['U']\n}, {\n  keycode: 73,\n  name: ['I']\n}, {\n  keycode: 79,\n  name: ['O']\n}, {\n  keycode: 80,\n  name: ['P']\n}, {\n  keycode: 219,\n  name: ['{', '[']\n}, {\n  keycode: 221,\n  name: ['}', ']']\n}, {\n  keycode: 220,\n  name: ['|', '\\\\']\n}, {\n  keycode: 20,\n  name: ['', 'CapsLock']\n}, {\n  keycode: 65,\n  name: ['A']\n}, {\n  keycode: 83,\n  name: ['S']\n}, {\n  keycode: 68,\n  name: ['D']\n}, {\n  keycode: 70,\n  name: ['F']\n}, {\n  keycode: 71,\n  name: ['G']\n}, {\n  keycode: 72,\n  name: ['H']\n}, {\n  keycode: 74,\n  name: ['J']\n}, {\n  keycode: 75,\n  name: ['K']\n}, {\n  keycode: 76,\n  name: ['L']\n}, {\n  keycode: 186,\n  name: [':', ';']\n}, {\n  keycode: 222,\n  name: ['\"', '\\'']\n}, {\n  keycode: 13,\n  name: ['enter', 'return']\n}, {\n  keycode: 16,\n  name: ['⇧']\n}, {\n  keycode: 90,\n  name: ['Z']\n}, {\n  keycode: 88,\n  name: ['X']\n}, {\n  keycode: 67,\n  name: ['C']\n}, {\n  keycode: 86,\n  name: ['V']\n}, {\n  keycode: 66,\n  name: ['B']\n}, {\n  keycode: 78,\n  name: ['N']\n}, {\n  keycode: 77,\n  name: ['M']\n}, {\n  keycode: 188,\n  name: ['<', ',']\n}, {\n  keycode: 190,\n  name: ['>', '.']\n}, {\n  keycode: 191,\n  name: ['?', '/']\n}, {\n  keycode: 16,\n  name: ['⇧']\n}, {\n  keycode: -1,\n  name: ['fn']\n}, {\n  keycode: 17,\n  name: ['control']\n}, {\n  keycode: 18,\n  name: ['alt', 'option']\n}, {\n  keycode: 91,\n  name: ['command']\n}, {\n  keycode: 32,\n  name: ['']\n}, {\n  keycode: 91,\n  name: ['command']\n}, {\n  keycode: 18,\n  name: ['alt', 'option']\n}, {\n  keycode: 37,\n  name: ['◀']\n}, {\n  keycode: 38,\n  name: ['▲']\n}, {\n  keycode: 39,\n  name: ['▶']\n}, {\n  keycode: 40,\n  name: ['▼']\n}];\nexport default function MacKeyBoard(_ref) {\n  var {\n      prefixCls = 'w-mac-keyboard',\n      className,\n      style,\n      keyCode = [],\n      onMouseDown: _onMouseDown,\n      onMouseUp: _onMouseUp\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: (prefixCls || '') + \" \" + (className || ''),\n    style: style,\n    children: /*#__PURE__*/_jsx(\"ul\", {\n      children: keyCodeData.map((item, idx) => {\n        var name = item.name.map((_item, _idx) => /*#__PURE__*/_jsx(\"span\", {\n          children: _item\n        }, \"\" + _idx));\n        return /*#__PURE__*/_jsx(\"li\", _extends({\n          onMouseDown: e => _onMouseDown && _onMouseDown(e, item),\n          onMouseUp: e => _onMouseUp && _onMouseUp(e, item),\n          className: keyCode.indexOf(item.keycode) > -1 ? 'pressed' : '',\n          \"data-key\": item.keycode\n        }, props, {\n          children: name\n        }), idx);\n      })\n    })\n  });\n}","export default \"<h1 align=\\\"center\\\">React Mac Keyboard</h1>\\n<p align=\\\"center\\\">\\n  <a href=\\\"https://uiwjs.github.io/react-mac-keyboard\\\">\\n    <img alt=\\\"react-mac-keyboard\\\" src=\\\"https://user-images.githubusercontent.com/1680273/80699566-c2aad500-8b0e-11ea-8d37-7e5537949d73.png\\\">\\n  </a>\\n</p>\\n\\n<!--dividing-->\\n[![Build & Deploy](https://github.com/uiwjs/react-mac-keyboard/workflows/Build%20&%20Deploy/badge.svg)](https://github.com/uiwjs/react-mac-keyboard/actions)\\n[![issues](https://img.shields.io/github/issues/uiwjs/react-mac-keyboard.svg)](https://github.com/uiwjs/react-mac-keyboard/issues)\\n[![Forks](https://img.shields.io/github/forks/uiwjs/react-mac-keyboard.svg)](https://github.com/uiwjs/react-mac-keyboard/network)\\n[![Stars](https://img.shields.io/github/stars/uiwjs/react-mac-keyboard.svg)](https://github.com/uiwjs/react-mac-keyboard/stargazers)\\n[![Release](https://img.shields.io/github/release/uiwjs/react-mac-keyboard)](https://github.com/uiwjs/react-mac-keyboard/releases)\\n[![npm version](https://img.shields.io/npm/v/@uiw/react-mac-keyboard.svg)](https://www.npmjs.com/package/@uiw/react-mac-keyboard)\\n\\nMacbook computer keyboard style for react component.\\n\\n## Quick Start\\n\\n```js\\nimport { useState } from \\\"react\\\";\\nimport MacKeyboard from \\\"@uiw/react-mac-keyboard\\\";\\n\\nfunction Demo() {\\n  const [keyCode, setKeyCode] = useState([]);\\n  return (\\n    <MacKeyboard\\n      keyCode={keyCode}\\n      onMouseDown={(e, item) => {\\n        if (item.keycode > -1) {\\n          setKeyCode([item.keycode]);\\n        }\\n      }}\\n      onMouseUp={() =>{\\n        setKeyCode([]);\\n      }}\\n    />\\n  );\\n}\\n```\\n\\n## Options Props\\n\\n```typescript\\ntype KeyCodeData = {\\n  keycode: number;\\n  name: string[];\\n}\\n\\ninterface MacKeyBoardProps {\\n  prefixCls?: string;\\n  className?: string;\\n  style?: React.CSSProperties;\\n  keyCode?: number[];\\n  onMouseDown?: (e: React.MouseEvent<HTMLLIElement, MouseEvent>, item: KeyCodeData) => void;\\n  onMouseUp?: (e: React.MouseEvent<HTMLLIElement, MouseEvent>, item: KeyCodeData) => void;\\n}\\n```\\n\\n## Development\\n\\nRuns the project in development mode.  \\n\\n```bash\\nnpm run install\\nnpm run build\\n\\nnpm run start\\n```\\n\\nBuilds the app for production to the build folder.\\n\\n```bash\\nnpm run build\\nnpm run doc\\n```\\n\\nThe build is minified and the filenames include the hashes.\\nYour app is ready to be deployed!\\n\\n## Contributors\\n\\nAs always, thanks to our amazing contributors!\\n\\n<a href=\\\"https://github.com/uiwjs/react-mac-keyboard/graphs/contributors\\\">\\n  <img src=\\\"https://uiwjs.github.io/react-mac-keyboard/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\nMade with [github-action-contributors](https://github.com/jaywcjlove/github-action-contributors).\\n\\n## License\\n\\nLicensed under the MIT License.\";","import React, { useState } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport { Npm, Github } from '@uiw/react-shields';\nimport '@uiw/github-corners';\nimport '@wcj/dark-mode';\nimport logo from './logo.svg';\nimport MacKeyboard from '../';\nimport MDStr from '../README.md';\nimport './App.css';\n\nconst APP =  () => {\n  const [keyCode, setKeyCode] = useState<number[]>([]);\n  return (\n    <div className=\"App\">\n      <dark-mode light=\"Light\" dark=\"Light\" style={{ position: 'fixed', top: 8, left: 10 }}></dark-mode>\n      <github-corners href=\"https://github.com/uiwjs/react-mac-keyboard\" position=\"fixed\" target=\"__blank\"></github-corners>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <a className=\"App-link\" href=\"https://github.com/uiwjs/react-mac-keyboard\" target=\"_blank\" rel=\"noopener noreferrer\">\n          React Mac Keyboard\n        </a>\n        <p>\n          Macbook computer keyboard style for react component.\n        </p>\n      </header>\n      <MacKeyboard\n        keyCode={keyCode}\n        onMouseDown={(e, item) => {\n          if (item.keycode > -1) {\n            setKeyCode([item.keycode]);\n          }\n        }}\n        onMouseUp={() =>{\n          setKeyCode([]);\n        }}\n      />\n      <MarkdownPreview className=\"App-markdown\" source={MDStr.replace(/([\\s\\S]*)<!--dividing-->/, '')} />\n      <div className=\"App-footer\">\n        <Github user=\"uiwjs\" repo=\"react-mac-keyboard\">\n          <Github.Social type=\"forks\" href=\"https://github.com/uiwjs/react-mac-keyboard\" />\n          <Github.Social type=\"stars\" href=\"https://github.com/uiwjs/react-mac-keyboard/stargazers\" />\n          <Github.Social type=\"watchers\" href=\"https://github.com/uiwjs/react-mac-keyboard/watchers\" />\n        </Github>\n        <Npm.Version scope=\"@uiw\" packageName=\"react-mac-keyboard\" href=\"https://www.npmjs.com/package/@uiw/react-mac-keyboard\" />\n      </div>\n    </div>\n  );\n}\n\nexport default APP;\n","import React from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport App from './App';\n\nconst container = document.getElementById('root');\nconst root = ReactDOMClient.createRoot(container!);\nroot.render(<App />);","/**\n * *** This styling is an extra step which is likely not required. ***\n * https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard\n * \n * Why is it here? To ensure:\n * \n * 1. the element is able to have focus and selection.\n * 2. if element was to flash render it has minimal visual impact.\n * 3. less flakyness with selection and copying which **might** occur if\n *     the textarea element is not visible.\n *\n *   The likelihood is the element won't even render, not even a flash,\n *   so some of these are just precautions. However in IE the element\n *   is visible whilst the popup box asking the user for permission for\n *   the web page to copy to the clipboard.\n *  \n *   Place in top-left corner of screen regardless of scroll position.\n *\n * @typedef CopyTextToClipboard\n * @property {(text: string, method?: (isCopy: boolean) => void) => void} void\n * @returns {void}\n * \n * @param {string} text \n * @param {CopyTextToClipboard} cb \n */\nexport default function copyTextToClipboard(text, cb) {\n  const el = document.createElement('textarea');\n  el.value = text;\n  el.setAttribute('readonly', '');\n  el.style = {\n    position: 'absolute',\n    left: '-9999px',\n  }\n  document.body.appendChild(el);\n  const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n  el.select();\n  let isCopy = false;\n  try {\n    const successful = document.execCommand('copy');\n    isCopy = !!successful;\n  } catch (err) {\n    isCopy = false;\n  }\n  document.body.removeChild(el);\n  if (selected && document.getSelection) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n  }\n  cb && cb(isCopy);\n};\n","/**\n * @package @wcj/dark-mode\n * Web Component that toggles dark mode 🌒\n * Github: https://github.com/jaywcjlove/dark-mode.git\n * Website: https://jaywcjlove.github.io/dark-mode\n * \n * Licensed under the MIT license.\n * @license Copyright © 2022. Licensed under the MIT License\n * @author kenny wong <wowohoo@qq.com>\n */\nconst t=document;const e=\"_dark_mode_theme_\";const s=\"permanent\";const o=\"colorschemechange\";const i=\"permanentcolorscheme\";const h=\"light\";const r=\"dark\";const n=(t,e,s=e)=>{Object.defineProperty(t,s,{enumerable:true,get(){const t=this.getAttribute(e);return t===null?\"\":t},set(t){this.setAttribute(e,t)}})};const c=(t,e,s=e)=>{Object.defineProperty(t,s,{enumerable:true,get(){return this.hasAttribute(e)},set(t){if(t){this.setAttribute(e,\"\")}else{this.removeAttribute(e)}}})};class a extends HTMLElement{static get observedAttributes(){return[\"mode\",h,r,s]}LOCAL_NANE=e;constructor(){super();this.t()}connectedCallback(){n(this,\"mode\");n(this,r);n(this,h);c(this,s);const a=localStorage.getItem(e);if(a&&[h,r].includes(a)){this.mode=a;this.permanent=true}if(this.permanent&&!a){localStorage.setItem(e,this.mode)}const l=[h,r].includes(a);if(this.permanent&&a){this.o()}else{if(window.matchMedia&&window.matchMedia(\"(prefers-color-scheme: dark)\").matches){this.mode=r;this.o()}if(window.matchMedia&&window.matchMedia(\"(prefers-color-scheme: light)\").matches){this.mode=h;this.o()}}if(!this.permanent&&!l){window.matchMedia(\"(prefers-color-scheme: light)\").onchange=t=>{this.mode=t.matches?h:r;this.o()};window.matchMedia(\"(prefers-color-scheme: dark)\").onchange=t=>{this.mode=t.matches?r:h;this.o()}}const d=new MutationObserver(((s,h)=>{this.mode=t.documentElement.dataset.colorMode;if(this.permanent&&l){localStorage.setItem(e,this.mode);this.i(i,{permanent:this.permanent})}this.h();this.i(o,{colorScheme:this.mode})}));d.observe(t.documentElement,{attributes:true});this.i(o,{colorScheme:this.mode});this.h()}attributeChangedCallback(t,s,o){if(t===\"mode\"&&s!==o&&[h,r].includes(o)){const t=localStorage.getItem(e);if(this.mode===t){this.mode=o;this.h();this.o()}else if(this.mode&&this.mode!==t){this.h();this.o()}}else if((t===h||t===r)&&s!==o){this.h()}if(t===\"permanent\"&&typeof this.permanent===\"boolean\"){this.permanent?localStorage.setItem(e,this.mode):localStorage.removeItem(e)}}o(){t.documentElement.setAttribute(\"data-color-mode\",this.mode)}h(){this.icon.textContent=this.mode===h?\"🌒\":\"🌞\";this.text.textContent=this.mode===h?this.getAttribute(r):this.getAttribute(h);if(!this.text.textContent&&this.text.parentElement&&this.text){this.text.parentElement.removeChild(this.text)}}t(){var s=this.attachShadow({mode:\"open\"});this.label=t.createElement(\"span\");this.label.setAttribute(\"class\",\"wrapper\");this.label.onclick=()=>{this.mode=this.mode===h?r:h;if(this.permanent){localStorage.setItem(e,this.mode)}this.o();this.h()};s.appendChild(this.label);this.icon=t.createElement(\"span\");this.label.appendChild(this.icon);this.text=t.createElement(\"span\");this.label.appendChild(this.text);const o=`\\n[data-color-mode*='dark'], [data-color-mode*='dark'] body {\\n  color-scheme: dark;\\n  --color-theme-bg: #0d1117;\\n  --color-theme-text: #c9d1d9;\\n  background-color: var(--color-theme-bg);\\n  color: var(--color-theme-text);\\n}\\n\\n[data-color-mode*='light'], [data-color-mode*='light'] body {\\n  color-scheme: light;\\n  --color-theme-bg: #fff;\\n  --color-theme-text: #24292f;\\n  background-color: var(--color-theme-bg);\\n  color: var(--color-theme-text);\\n}`;const i=\"_dark_mode_style_\";const n=t.getElementById(i);if(!n){var c=t.createElement(\"style\");c.id=i;c.textContent=o;t.head.appendChild(c)}var a=t.createElement(\"style\");a.textContent=`\\n    .wrapper { cursor: pointer; user-select: none; position: relative; }\\n    .wrapper > span + span { margin-left: .4rem; }\\n    `;s.appendChild(a)}i(t,e){this.dispatchEvent(new CustomEvent(t,{bubbles:true,composed:true,detail:e}))}}customElements.define(\"dark-mode\",a);","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_context_1 = require(\"./parser-context\");\nvar render_1 = require(\"./render\");\nvar CssSelectorParser = /** @class */ (function () {\n    function CssSelectorParser() {\n        this.pseudos = {};\n        this.attrEqualityMods = {};\n        this.ruleNestingOperators = {};\n        this.substitutesEnabled = false;\n    }\n    CssSelectorParser.prototype.registerSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_1 = pseudos; _a < pseudos_1.length; _a++) {\n            var pseudo = pseudos_1[_a];\n            this.pseudos[pseudo] = 'selector';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_2 = pseudos; _a < pseudos_2.length; _a++) {\n            var pseudo = pseudos_2[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_3 = pseudos; _a < pseudos_3.length; _a++) {\n            var pseudo = pseudos_3[_a];\n            this.pseudos[pseudo] = 'numeric';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_4 = pseudos; _a < pseudos_4.length; _a++) {\n            var pseudo = pseudos_4[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_1 = operators; _a < operators_1.length; _a++) {\n            var operator = operators_1[_a];\n            this.ruleNestingOperators[operator] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_2 = operators; _a < operators_2.length; _a++) {\n            var operator = operators_2[_a];\n            delete this.ruleNestingOperators[operator];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_1 = mods; _a < mods_1.length; _a++) {\n            var mod = mods_1[_a];\n            this.attrEqualityMods[mod] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_2 = mods; _a < mods_2.length; _a++) {\n            var mod = mods_2[_a];\n            delete this.attrEqualityMods[mod];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.enableSubstitutes = function () {\n        this.substitutesEnabled = true;\n        return this;\n    };\n    CssSelectorParser.prototype.disableSubstitutes = function () {\n        this.substitutesEnabled = false;\n        return this;\n    };\n    CssSelectorParser.prototype.parse = function (str) {\n        return parser_context_1.parseCssSelector(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);\n    };\n    CssSelectorParser.prototype.render = function (path) {\n        return render_1.renderEntity(path).trim();\n    };\n    return CssSelectorParser;\n}());\nexports.CssSelectorParser = CssSelectorParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction parseCssSelector(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {\n    var l = str.length;\n    var chr = '';\n    function getStr(quote, escapeTable) {\n        var result = '';\n        pos++;\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (chr === quote) {\n                pos++;\n                return result;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                chr = str.charAt(pos);\n                var esc = void 0;\n                if (chr === quote) {\n                    result += quote;\n                }\n                else if ((esc = escapeTable[chr]) !== undefined) {\n                    result += esc;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                result += chr;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function getIdent() {\n        var result = '';\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (utils_1.isIdent(chr)) {\n                result += chr;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                if (pos >= l) {\n                    throw Error('Expected symbol but end of file reached.');\n                }\n                chr = str.charAt(pos);\n                if (utils_1.identSpecialChars[chr]) {\n                    result += chr;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                return result;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function skipWhitespace() {\n        chr = str.charAt(pos);\n        var result = false;\n        while (chr === ' ' || chr === \"\\t\" || chr === \"\\n\" || chr === \"\\r\" || chr === \"\\f\") {\n            result = true;\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function parse() {\n        var res = parseSelector();\n        if (pos < l) {\n            throw Error('Rule expected but \"' + str.charAt(pos) + '\" found.');\n        }\n        return res;\n    }\n    function parseSelector() {\n        var selector = parseSingleSelector();\n        if (!selector) {\n            return null;\n        }\n        var res = selector;\n        chr = str.charAt(pos);\n        while (chr === ',') {\n            pos++;\n            skipWhitespace();\n            if (res.type !== 'selectors') {\n                res = {\n                    type: 'selectors',\n                    selectors: [selector]\n                };\n            }\n            selector = parseSingleSelector();\n            if (!selector) {\n                throw Error('Rule expected after \",\".');\n            }\n            res.selectors.push(selector);\n        }\n        return res;\n    }\n    function parseSingleSelector() {\n        skipWhitespace();\n        var selector = {\n            type: 'ruleSet'\n        };\n        var rule = parseRule();\n        if (!rule) {\n            return null;\n        }\n        var currentRule = selector;\n        while (rule) {\n            rule.type = 'rule';\n            currentRule.rule = rule;\n            currentRule = rule;\n            skipWhitespace();\n            chr = str.charAt(pos);\n            if (pos >= l || chr === ',' || chr === ')') {\n                break;\n            }\n            if (ruleNestingOperators[chr]) {\n                var op = chr;\n                pos++;\n                skipWhitespace();\n                rule = parseRule();\n                if (!rule) {\n                    throw Error('Rule expected after \"' + op + '\".');\n                }\n                rule.nestingOperator = op;\n            }\n            else {\n                rule = parseRule();\n                if (rule) {\n                    rule.nestingOperator = null;\n                }\n            }\n        }\n        return selector;\n    }\n    // @ts-ignore no-overlap\n    function parseRule() {\n        var rule = null;\n        while (pos < l) {\n            chr = str.charAt(pos);\n            if (chr === '*') {\n                pos++;\n                (rule = rule || {}).tagName = '*';\n            }\n            else if (utils_1.isIdentStart(chr) || chr === '\\\\') {\n                (rule = rule || {}).tagName = getIdent();\n            }\n            else if (chr === '.') {\n                pos++;\n                rule = rule || {};\n                (rule.classNames = rule.classNames || []).push(getIdent());\n            }\n            else if (chr === '#') {\n                pos++;\n                (rule = rule || {}).id = getIdent();\n            }\n            else if (chr === '[') {\n                pos++;\n                skipWhitespace();\n                var attr = {\n                    name: getIdent()\n                };\n                skipWhitespace();\n                // @ts-ignore\n                if (chr === ']') {\n                    pos++;\n                }\n                else {\n                    var operator = '';\n                    if (attrEqualityMods[chr]) {\n                        operator = chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \"=\" but end of file reached.');\n                    }\n                    if (chr !== '=') {\n                        throw Error('Expected \"=\" but \"' + chr + '\" found.');\n                    }\n                    attr.operator = operator + '=';\n                    pos++;\n                    skipWhitespace();\n                    var attrValue = '';\n                    attr.valueType = 'string';\n                    // @ts-ignore\n                    if (chr === '\"') {\n                        attrValue = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (chr === '\\'') {\n                        attrValue = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (substitutesEnabled && chr === '$') {\n                        pos++;\n                        attrValue = getIdent();\n                        attr.valueType = 'substitute';\n                    }\n                    else {\n                        while (pos < l) {\n                            if (chr === ']') {\n                                break;\n                            }\n                            attrValue += chr;\n                            pos++;\n                            chr = str.charAt(pos);\n                        }\n                        attrValue = attrValue.trim();\n                    }\n                    skipWhitespace();\n                    if (pos >= l) {\n                        throw Error('Expected \"]\" but end of file reached.');\n                    }\n                    if (chr !== ']') {\n                        throw Error('Expected \"]\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    attr.value = attrValue;\n                }\n                rule = rule || {};\n                (rule.attrs = rule.attrs || []).push(attr);\n            }\n            else if (chr === ':') {\n                pos++;\n                var pseudoName = getIdent();\n                var pseudo = {\n                    name: pseudoName\n                };\n                // @ts-ignore\n                if (chr === '(') {\n                    pos++;\n                    var value = '';\n                    skipWhitespace();\n                    if (pseudos[pseudoName] === 'selector') {\n                        pseudo.valueType = 'selector';\n                        value = parseSelector();\n                    }\n                    else {\n                        pseudo.valueType = pseudos[pseudoName] || 'string';\n                        // @ts-ignore\n                        if (chr === '\"') {\n                            value = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (chr === '\\'') {\n                            value = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (substitutesEnabled && chr === '$') {\n                            pos++;\n                            value = getIdent();\n                            pseudo.valueType = 'substitute';\n                        }\n                        else {\n                            while (pos < l) {\n                                if (chr === ')') {\n                                    break;\n                                }\n                                value += chr;\n                                pos++;\n                                chr = str.charAt(pos);\n                            }\n                            value = value.trim();\n                        }\n                        skipWhitespace();\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \")\" but end of file reached.');\n                    }\n                    if (chr !== ')') {\n                        throw Error('Expected \")\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    pseudo.value = value;\n                }\n                rule = rule || {};\n                (rule.pseudos = rule.pseudos || []).push(pseudo);\n            }\n            else {\n                break;\n            }\n        }\n        return rule;\n    }\n    return parse();\n}\nexports.parseCssSelector = parseCssSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction renderEntity(entity) {\n    var res = '';\n    switch (entity.type) {\n        case 'ruleSet':\n            var currentEntity = entity.rule;\n            var parts = [];\n            while (currentEntity) {\n                if (currentEntity.nestingOperator) {\n                    parts.push(currentEntity.nestingOperator);\n                }\n                parts.push(renderEntity(currentEntity));\n                currentEntity = currentEntity.rule;\n            }\n            res = parts.join(' ');\n            break;\n        case 'selectors':\n            res = entity.selectors.map(renderEntity).join(', ');\n            break;\n        case 'rule':\n            if (entity.tagName) {\n                if (entity.tagName === '*') {\n                    res = '*';\n                }\n                else {\n                    res = utils_1.escapeIdentifier(entity.tagName);\n                }\n            }\n            if (entity.id) {\n                res += \"#\" + utils_1.escapeIdentifier(entity.id);\n            }\n            if (entity.classNames) {\n                res += entity.classNames.map(function (cn) {\n                    return \".\" + (utils_1.escapeIdentifier(cn));\n                }).join('');\n            }\n            if (entity.attrs) {\n                res += entity.attrs.map(function (attr) {\n                    if ('operator' in attr) {\n                        if (attr.valueType === 'substitute') {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + \"$\" + attr.value + \"]\";\n                        }\n                        else {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + utils_1.escapeStr(attr.value) + \"]\";\n                        }\n                    }\n                    else {\n                        return \"[\" + utils_1.escapeIdentifier(attr.name) + \"]\";\n                    }\n                }).join('');\n            }\n            if (entity.pseudos) {\n                res += entity.pseudos.map(function (pseudo) {\n                    if (pseudo.valueType) {\n                        if (pseudo.valueType === 'selector') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + renderEntity(pseudo.value) + \")\";\n                        }\n                        else if (pseudo.valueType === 'substitute') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"($\" + pseudo.value + \")\";\n                        }\n                        else if (pseudo.valueType === 'numeric') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + pseudo.value + \")\";\n                        }\n                        else {\n                            return (\":\" + utils_1.escapeIdentifier(pseudo.name) +\n                                \"(\" + utils_1.escapeIdentifier(pseudo.value) + \")\");\n                        }\n                    }\n                    else {\n                        return \":\" + utils_1.escapeIdentifier(pseudo.name);\n                    }\n                }).join('');\n            }\n            break;\n        default:\n            throw Error('Unknown entity type: \"' + entity.type + '\".');\n    }\n    return res;\n}\nexports.renderEntity = renderEntity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c === '-') || (c === '_');\n}\nexports.isIdentStart = isIdentStart;\nfunction isIdent(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '-' || c === '_';\n}\nexports.isIdent = isIdent;\nfunction isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexports.isHex = isHex;\nfunction escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (exports.identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (!(chr === '_' || chr === '-' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (i !== 0 && chr >= '0' && chr <= '9'))) {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xF800) === 0xD800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xFC00) !== 0xD800 || (extraCharCode & 0xFC00) !== 0xDC00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3FF) << 10) + (extraCharCode & 0x3FF) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n            else {\n                result += chr;\n            }\n        }\n        i++;\n    }\n    return result;\n}\nexports.escapeIdentifier = escapeIdentifier;\nfunction escapeStr(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    var replacement;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if ((replacement = exports.strReplacementsRev[chr]) !== undefined) {\n            chr = replacement;\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\" + result + \"\\\"\";\n}\nexports.escapeStr = escapeStr;\nexports.identSpecialChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    '$': true,\n    '%': true,\n    '&': true,\n    '\\'': true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexports.strReplacementsRev = {\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\f': '\\\\f',\n    '\\v': '\\\\v'\n};\nexports.singleQuoteEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\\'': '\\''\n};\nexports.doubleQuotesEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\"': '\"'\n};\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = options.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_uiw_react_mac_keyboard\"] = self[\"webpackChunk_uiw_react_mac_keyboard\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [137,183,438,264], function() { return __webpack_require__(171); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["stringifyPosition","value","position","point","index","line","column","pos","start","end","VFileMessage","_Error","_inherits","_super","_createSuper","reason","place","origin","_this","_classCallCheck","parts","call","undefined","indexOf","slice","name","message","stack","fatal","source","ruleId","file","actual","expected","url","note","_createClass","_wrapNativeSuper","Error","prototype","path","basename","ext","TypeError","assertPath","seenNonSlash","length","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","joined","_len","arguments","segments","Array","_key","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","error","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","options","bufferLike","buffer","this","data","messages","history","stored","map","prop","_toConsumableArray","includes","key","get","set","assertNonEmpty","push","assertPart","stem","encoding","toString","part","bail","isPlainObject","Object","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","next","fn","_len2","output","_key2","middleware","called","wrapped","_len3","parameters","_key3","fnExpectsCallback","done","apply","Promise","then","_len4","_key4","concat","wrap","use","middelware","unified","base","frozen","transformers","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","_attachers$freezeInde","_toArray","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","isArray","addList","addPreset","assign","add","_value","plugin","plugins","entry","isPlainObj","extend","parse","doc","vfile","assertParser","newable","String","node","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","isBuffer","processSync","destination","hasOwnProperty","keys","type","asyncName","Boolean","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","content","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","replace","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","characterReference","numeric","decodeNamedCharacterReference","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","_document","_defineProperty","_flowInitial","_flow","_string","_text","resolveText","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","atCarriageReturn","match","endPosition","lastIndex","exec","Math","ceil","preprocess","d","combined","_combined$key","_combined$key2","normalizeUri","skip","encodeURIComponent","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","_checks$index","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","defineProperty","visit","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","suffix","contents","listItemLoose","tab","space","trimLines","last","lines","trimLine","codePointAt","handlers","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","src","inlineCode","linkReference","results","loose","listLoose","disabled","child","root","table","rows","firstRow","shift","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","_objectSpread","cache","definitions","augment","hName","hProperties","hChildren","ctx","generated","props","to","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","_tail$children","tailTail","dataFootnotes","footer","bridge","mutate","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","_parent$children","unwrapDisallowed","whitespace","thing","hastToReact","classId","dataType","itemId","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","typeOf","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlnsXLink","protocols","uriTransformer","uri","trim","first","charAt","colon","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","property","transform","transformLinkUri","parentSchema","schema","svg","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","target","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","style","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","find","commaSeparated","commas","spaces","_unused","v","k","styleReplacer","parseStyle","attribute","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","PropTypes","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","p","s","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","replacement","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","ccount","character","findAndReplace","RegExp","ignored","pairs","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","_nodes","global","escape","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","split","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","email","association","repeat","eol","patternCompile","pattern","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","sort","numerical","escapeBackslashes","encode","a","b","whole","track","lineShift","move","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","safeOptions","tracker","subexit","indentLines","indexStack","createTracker","handle","bulletLastUsed","containerFlow","blank","containerPhrasing","peek","handleDelete","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","row","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","sizes","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","remarkGfm","gfm","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","core","webNamespaces","mathml","xlink","xml","xmlns","proto","nodeName","quirksMode","mode","childNodes","location","loc","indices","toPoint","toOffset","isNaN","namespaceURI","attrs","h","sourceCodeLocation","endTag","element","verbose","opening","closing","createLocation","startLine","startCol","startOffset","endLine","endCol","endOffset","zwitch","invalid","unknown","_fn","currentSchema","createProperty","parentNode","doctype","publicId","systemId","boolean","htmlVoidElements","endTagToken","parseOptions","sourceCodeLocationInfo","scriptingEnabled","raw","stitches","preprocessor","posTracker","locationTracker","resetTokenizer","_processInputToken","createParse5Location","chars","forceQuirks","lastGapPos","lastCharPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","isEol","lineStartPos","droppedBufferSize","col","currentAttrLocation","ctLoc","_runParsingLoop","_consume","stitch","options_","fromParse5","documentMode","treeAdapter","createDocument","_bootstrap","__mixins","mock","_pushTmplInsertionMode","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","_adoptNodes","currentCharacterToken","tokenQueue","charRefCode","tempBuff","lastStartTagName","consumedAfterSnapshot","active","currentToken","currentAttr","selfClosing","attributes","toParse5","rehypeRaw","hasProperty","isNode","headingRank","slugs","BananaSlug","occurrences","reset","maintainCase","slug","originalSlug","rehypeSlug","convertElement","tagNameFactory","contentDefaults","rehypeAutolinkHeadings","method","behavior","behaviour","toChildren","grouping","toNode","ariaHidden","tabIndex","nextChild","codeBlockParames","i","getCommentObject","_ref","_ref$value","param","reduce","getURLParameters","forEach","keyName","propertiesHandle","defaultAttrs","rehyp","_options$properties","_options$codeBlockPar","firstChild","prevChild","attr","_options$openDelimite","openDelimiter","_options$closeDelimit","closeDelimiter","filter","str","o","r","e","u","f","metastring","m","t","c","n","g","highlight","ignoreMissing","l","entries","y","groups","w","N","j","cascadeRaw","cascade","preorder","showLineNumbers","some","substring","x","rtlRange","ltrRange","rtl","ltr","dirBidi","direction","dirProperty","dir","query","operator","normalizeValue","tags","ranges","cast","matches","rightIndex","range","leftIndex","tag","extendedFilter","ZERO","NINE","nthCheck","formula","parsed","boolbase","absA","abs","bMod","idx","sign","readSign","number","readNumber","skipWhitespace","fauxEsmNthCheck","any","someChildren","_1","_2","_3","empty","enabled","assertDeep","elementIndex","typeIndex","childState","found","shallow","scopeElements","rootQuery","queryToSelectors","walk","language","elementCount","typeCount","not","getCachedNthCheck","optional","required","readWrite","scope","pseudo","pseudos","editableOrEditingHost","_cachedFn","classNames","needsIndex","selectors","currentRules","nestResult","directChild","descendant","adjacentSibling","generalSibling","dirInferred","currentDirection","xmlLang","contentEditable","enterState","rules","selectorIndex","ruleSet","rule","nest","nestingOperator","applySelectors","combine","fromSibling","fromParent","total","types","Map","counts","CssSelectorParser","selector","registerAttrEqualityMods","registerSelectorPseudos","registerNestingOperators","getCodeString","rewrite","selected","selectAll","octiconLink","viewBox","version","width","height","fillRule","reservedMeta","_extends","ref","_props$prefixCls","prefixCls","_props$disableCopy","disableCopy","_props$skipHtml","onScroll","onMouseOver","pluginsFilter","rehypeRewrite","_props$wrapperElement","wrapperElement","_props$warpperElement","warpperElement","other","_objectWithoutPropertiesLoose","_excluded","mdp","useImperativeHandle","cls","container","useCallback","currentTarget","classList","copyTextToClipboard","dataset","setTimeout","useEffect","_container$current","btns","querySelectorAll","elm","addEventListener","removeEventListener","useCopied","rehypePrism","headings","rehypeIgnore","class","fill","rehypeAttrs","customProps","wrapperProps","_jsx","Container","_Component","_Fragment","Component","Base","defaultState","forceState","getUrl","_jsxs","defaultProps","platform","Issue","_Base","_this$state","user","repo","Size","Activity","baseData","interval","variant","branch","Version","typePath","License","Analysis","Social","Github","_Container","Issues","Downloads","Coverages","Codacy","projectId","Coverage","packageName","dependency","dependencyScope","registryUri","format","Npm","GITHUB_CORNERS_TEMPLATE","createElement","innerHTML","GithubCorners","_HTMLElement","shadow","attachShadow","appendChild","ownerDocument","importNode","update","querySelector","toLocaleLowerCase","lastElementChild","setAttribute","firstElementChild","_this2","getAttributeNames","getAttribute","setAttr","oldValue","newValue","HTMLElement","customElements","define","keyCodeData","keycode","MacKeyBoard","_ref$prefixCls","_ref$keyCode","keyCode","_onMouseDown","onMouseDown","_onMouseUp","onMouseUp","_item","_idx","_useState","useState","_useState2","_slicedToArray","setKeyCode","light","dark","top","logo","rel","MacKeyboard","MarkdownPreview","MDStr","getElementById","ReactDOMClient","render","App","cb","el","getSelection","rangeCount","getRangeAt","select","isCopy","execCommand","err","removeChild","removeAllRanges","addRange","enumerable","_assertThisInitialized","hasAttribute","removeAttribute","localStorage","getItem","permanent","setItem","window","matchMedia","onchange","MutationObserver","documentElement","colorMode","colorScheme","observe","removeItem","icon","textContent","parentElement","_this3","onclick","dispatchEvent","CustomEvent","bubbles","composed","detail","module","exports","trueFunc","falseFunc","parser_context_1","require","render_1","attrEqualityMods","ruleNestingOperators","substitutesEnabled","_i","_a","pseudos_1","unregisterSelectorPseudos","pseudos_2","registerNumericPseudos","pseudos_3","unregisterNumericPseudos","pseudos_4","operators","operators_1","unregisterNestingOperators","operators_2","mods","mods_1","mod","unregisterAttrEqualityMods","mods_2","enableSubstitutes","disableSubstitutes","parseCssSelector","renderEntity","utils_1","chr","getStr","quote","escapeTable","esc","isHex","getIdent","isIdent","identSpecialChars","parseSelector","parseSingleSelector","res","parseRule","currentRule","op","isIdentStart","attrValue","valueType","doubleQuotesEscapeChars","singleQuoteEscapeChars","pseudoName","entity","currentEntity","escapeIdentifier","cn","escapeStr","len","charCode","extraCharCode","strReplacementsRev","hasOwn","toStr","gOPD","getOwnPropertyDescriptor","arr","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","configurable","writable","getProperty","copy","copyIsArray","clone","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","lineno","updatePosition","Position","errorsList","msg","filename","silent","re","comments","val","ret","decl","decls","declarations","parsePart","_step","_iterator","_createForOfIteratorHelper","_m2","lhs","rhs","incr","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","symbol","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","for","q","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","C","sortIndex","performance","unstable_now","Date","z","A","B","D","E","clearTimeout","F","setImmediate","G","startTime","expirationTime","H","I","J","K","L","M","priorityLevel","navigator","scheduling","isInputPending","bind","S","O","P","Q","R","MessageChannel","T","U","port2","port1","onmessage","postMessage","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","delay","unstable_shouldYield","unstable_wrapCallback","StyleToObject","hasIterator","tokens","padRight","padLeft","char","buttonTypes","defaultTagName","caseSensitive","createAdjustMap","subvalue","isProperties","addChild","spaceSeparated","commaOrSpaceSeparated","parsePrimitive","finalResult","overloadedBoolean","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","parseEntities","additional","queue","following","begin","characterReferenceCharacters","characters","terminated","namedReference","diff","nonTerminated","warning","referenceCode","disallowed","flush","referenceContext","warningContext","textContext","Schema","normal","merge","DefinedInfo","mustUseProperty","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlnsxlink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemProp","itemRef","itemScope","itemType","loading","loop","low","manifest","maxLength","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","reversed","rowSpan","sandbox","scoped","seamless","slot","span","spellCheck","srcDoc","srcLang","srcSet","translate","typeMustMatch","useMap","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dominantBaseline","enableBackground","fillOpacity","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","opacity","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","htmlBase","svgBase","valid","dash","cap","Type","Info","rest","camelcase","dashes","kebab","_Info","mark","powers","increment","pow","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","deferred","chunkIds","priority","notFulfilled","Infinity","fulfilled","every","getter","__esModule","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}